
AutoSys2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  0000122c  000012c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000122c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800132  00800132  000012f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001324  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000991  00000000  00000000  000014dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000422  00000000  00000000  00001e6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e03  00000000  00000000  0000228f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005a4  00000000  00000000  00003094  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e1  00000000  00000000  00003638  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b3c  00000000  00000000  00003b19  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00004655  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	00 00       	nop
       4:	a9 c0       	rjmp	.+338    	; 0x158 <__bad_interrupt>
       6:	00 00       	nop
       8:	a7 c0       	rjmp	.+334    	; 0x158 <__bad_interrupt>
       a:	00 00       	nop
       c:	a5 c0       	rjmp	.+330    	; 0x158 <__bad_interrupt>
       e:	00 00       	nop
      10:	a3 c0       	rjmp	.+326    	; 0x158 <__bad_interrupt>
      12:	00 00       	nop
      14:	a1 c0       	rjmp	.+322    	; 0x158 <__bad_interrupt>
      16:	00 00       	nop
      18:	9f c0       	rjmp	.+318    	; 0x158 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	e6 c7       	rjmp	.+4044   	; 0xfea <__vector_7>
      1e:	00 00       	nop
      20:	9b c0       	rjmp	.+310    	; 0x158 <__bad_interrupt>
      22:	00 00       	nop
      24:	0c 94 1f 08 	jmp	0x103e	; 0x103e <__vector_9>
      28:	97 c0       	rjmp	.+302    	; 0x158 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	95 c0       	rjmp	.+298    	; 0x158 <__bad_interrupt>
      2e:	00 00       	nop
      30:	93 c0       	rjmp	.+294    	; 0x158 <__bad_interrupt>
      32:	00 00       	nop
      34:	91 c0       	rjmp	.+290    	; 0x158 <__bad_interrupt>
      36:	00 00       	nop
      38:	8f c0       	rjmp	.+286    	; 0x158 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8d c0       	rjmp	.+282    	; 0x158 <__bad_interrupt>
      3e:	00 00       	nop
      40:	8b c0       	rjmp	.+278    	; 0x158 <__bad_interrupt>
      42:	00 00       	nop
      44:	89 c0       	rjmp	.+274    	; 0x158 <__bad_interrupt>
      46:	00 00       	nop
      48:	87 c0       	rjmp	.+270    	; 0x158 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	85 c0       	rjmp	.+266    	; 0x158 <__bad_interrupt>
      4e:	00 00       	nop
      50:	83 c0       	rjmp	.+262    	; 0x158 <__bad_interrupt>
      52:	00 00       	nop
      54:	81 c0       	rjmp	.+258    	; 0x158 <__bad_interrupt>
      56:	00 00       	nop
      58:	7f c0       	rjmp	.+254    	; 0x158 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7d c0       	rjmp	.+250    	; 0x158 <__bad_interrupt>
      5e:	00 00       	nop
      60:	7b c0       	rjmp	.+246    	; 0x158 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <__vector_25>
      68:	77 c0       	rjmp	.+238    	; 0x158 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	75 c0       	rjmp	.+234    	; 0x158 <__bad_interrupt>
      6e:	00 00       	nop
      70:	73 c0       	rjmp	.+230    	; 0x158 <__bad_interrupt>
      72:	00 00       	nop
      74:	71 c0       	rjmp	.+226    	; 0x158 <__bad_interrupt>
      76:	00 00       	nop
      78:	6f c0       	rjmp	.+222    	; 0x158 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6d c0       	rjmp	.+218    	; 0x158 <__bad_interrupt>
      7e:	00 00       	nop
      80:	6b c0       	rjmp	.+214    	; 0x158 <__bad_interrupt>
      82:	00 00       	nop
      84:	69 c0       	rjmp	.+210    	; 0x158 <__bad_interrupt>
      86:	00 00       	nop
      88:	67 c0       	rjmp	.+206    	; 0x158 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	65 c0       	rjmp	.+202    	; 0x158 <__bad_interrupt>
      8e:	00 00       	nop
      90:	63 c0       	rjmp	.+198    	; 0x158 <__bad_interrupt>
	...

00000094 <LcdCustomChar>:
      94:	00 1f 00 00 00 00 1f 00 00 1f 10 10 10 10 1f 00     ................
      a4:	00 1f 18 18 18 18 1f 00 00 1f 1c 1c 1c 1c 1f 00     ................
      b4:	00 1f 1e 1e 1e 1e 1f 00 00 1f 1f 1f 1f 1f 1f 00     ................
      c4:	03 07 0f 1f 0f 07 03 00 00 1f 1f 1f 1f 1f 1f 00     ................
      d4:	1b 1b 1b 1b 1b 1b 1b 00 18 1c 1e 1f 1e 1c 18 00     ................
      e4:	00 04 04 0e 0e 1f 1f 00 00 1f 1f 0e 0e 04 04 00     ................
	...
      fc:	00 0e 19 15 13 0e 00 00 00 0e 15 15 15 0e 00 00     ................
     10c:	00 0e 13 15 19 0e 00 00 00 0e 11 1f 11 0e 00 00     ................

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf ef       	ldi	r28, 0xFF	; 255
     122:	d0 e1       	ldi	r29, 0x10	; 16
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61

00000128 <__do_copy_data>:
     128:	11 e0       	ldi	r17, 0x01	; 1
     12a:	a0 e0       	ldi	r26, 0x00	; 0
     12c:	b1 e0       	ldi	r27, 0x01	; 1
     12e:	ec e2       	ldi	r30, 0x2C	; 44
     130:	f2 e1       	ldi	r31, 0x12	; 18
     132:	00 e0       	ldi	r16, 0x00	; 0
     134:	0b bf       	out	0x3b, r16	; 59
     136:	02 c0       	rjmp	.+4      	; 0x13c <__do_copy_data+0x14>
     138:	07 90       	elpm	r0, Z+
     13a:	0d 92       	st	X+, r0
     13c:	a2 33       	cpi	r26, 0x32	; 50
     13e:	b1 07       	cpc	r27, r17
     140:	d9 f7       	brne	.-10     	; 0x138 <__do_copy_data+0x10>

00000142 <__do_clear_bss>:
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	a2 e3       	ldi	r26, 0x32	; 50
     146:	b1 e0       	ldi	r27, 0x01	; 1
     148:	01 c0       	rjmp	.+2      	; 0x14c <.do_clear_bss_start>

0000014a <.do_clear_bss_loop>:
     14a:	1d 92       	st	X+, r1

0000014c <.do_clear_bss_start>:
     14c:	ad 33       	cpi	r26, 0x3D	; 61
     14e:	b2 07       	cpc	r27, r18
     150:	e1 f7       	brne	.-8      	; 0x14a <.do_clear_bss_loop>
     152:	44 d6       	rcall	.+3208   	; 0xddc <main>
     154:	0c 94 14 09 	jmp	0x1228	; 0x1228 <_exit>

00000158 <__bad_interrupt>:
     158:	53 cf       	rjmp	.-346    	; 0x0 <__vectors>

0000015a <delay_ms>:

/*! \brief Millisecond delay
 * \param ms the delay in milliseconds
 */
void delay_ms(unsigned char ms)
{
     15a:	cf 93       	push	r28
     15c:	df 93       	push	r29
     15e:	00 d0       	rcall	.+0      	; 0x160 <delay_ms+0x6>
     160:	00 d0       	rcall	.+0      	; 0x162 <delay_ms+0x8>
     162:	1f 92       	push	r1
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
     168:	8d 83       	std	Y+5, r24	; 0x05
   unsigned short delay_count = F_CPU / 4000;
     16a:	80 ea       	ldi	r24, 0xA0	; 160
     16c:	9f e0       	ldi	r25, 0x0F	; 15
     16e:	9a 83       	std	Y+2, r25	; 0x02
     170:	89 83       	std	Y+1, r24	; 0x01
#ifdef __GNUC__
    unsigned short cnt;
    __asm__ __volatile__ ("\n"
     172:	4d 81       	ldd	r20, Y+5	; 0x05
     174:	29 81       	ldd	r18, Y+1	; 0x01
     176:	3a 81       	ldd	r19, Y+2	; 0x02

00000178 <L_dl124>:
     178:	82 2f       	mov	r24, r18
     17a:	93 2f       	mov	r25, r19

0000017c <L_dl224>:
     17c:	01 97       	sbiw	r24, 0x01	; 1
     17e:	f1 f7       	brne	.-4      	; 0x17c <L_dl224>
     180:	4a 95       	dec	r20
     182:	d1 f7       	brne	.-12     	; 0x178 <L_dl124>
     184:	9c 83       	std	Y+4, r25	; 0x04
     186:	8b 83       	std	Y+3, r24	; 0x03
    while (ms--) {
        delay_cnt_buffer = delay_cnt;
        while (delay_cnt_buffer--);
    }
#endif
}
     188:	00 00       	nop
     18a:	0f 90       	pop	r0
     18c:	0f 90       	pop	r0
     18e:	0f 90       	pop	r0
     190:	0f 90       	pop	r0
     192:	0f 90       	pop	r0
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	08 95       	ret

0000019a <lcdInitHW>:
	lcdBusyWait();				// wait until LCD not busy
	data = *((volatile unsigned char *) (LCD_DATA_ADDR));
	//cbi(MCUCR, SRW);			// disable RAM waitstate
#endif
	return data;
}
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	cd b7       	in	r28, 0x3d	; 61
     1a0:	de b7       	in	r29, 0x3e	; 62
     1a2:	85 e2       	ldi	r24, 0x25	; 37
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	25 e2       	ldi	r18, 0x25	; 37
     1a8:	30 e0       	ldi	r19, 0x00	; 0
     1aa:	f9 01       	movw	r30, r18
     1ac:	20 81       	ld	r18, Z
     1ae:	2f 7e       	andi	r18, 0xEF	; 239
     1b0:	fc 01       	movw	r30, r24
     1b2:	20 83       	st	Z, r18
     1b4:	85 e2       	ldi	r24, 0x25	; 37
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	25 e2       	ldi	r18, 0x25	; 37
     1ba:	30 e0       	ldi	r19, 0x00	; 0
     1bc:	f9 01       	movw	r30, r18
     1be:	20 81       	ld	r18, Z
     1c0:	2f 7d       	andi	r18, 0xDF	; 223
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 83       	st	Z, r18
     1c6:	85 e2       	ldi	r24, 0x25	; 37
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	25 e2       	ldi	r18, 0x25	; 37
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	f9 01       	movw	r30, r18
     1d0:	20 81       	ld	r18, Z
     1d2:	2f 7b       	andi	r18, 0xBF	; 191
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18
     1d8:	84 e2       	ldi	r24, 0x24	; 36
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	24 e2       	ldi	r18, 0x24	; 36
     1de:	30 e0       	ldi	r19, 0x00	; 0
     1e0:	f9 01       	movw	r30, r18
     1e2:	20 81       	ld	r18, Z
     1e4:	20 61       	ori	r18, 0x10	; 16
     1e6:	fc 01       	movw	r30, r24
     1e8:	20 83       	st	Z, r18
     1ea:	84 e2       	ldi	r24, 0x24	; 36
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	24 e2       	ldi	r18, 0x24	; 36
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	f9 01       	movw	r30, r18
     1f4:	20 81       	ld	r18, Z
     1f6:	20 62       	ori	r18, 0x20	; 32
     1f8:	fc 01       	movw	r30, r24
     1fa:	20 83       	st	Z, r18
     1fc:	84 e2       	ldi	r24, 0x24	; 36
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	24 e2       	ldi	r18, 0x24	; 36
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	f9 01       	movw	r30, r18
     206:	20 81       	ld	r18, Z
     208:	20 64       	ori	r18, 0x40	; 64
     20a:	fc 01       	movw	r30, r24
     20c:	20 83       	st	Z, r18
     20e:	81 e2       	ldi	r24, 0x21	; 33
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	10 82       	st	Z, r1
     216:	82 e2       	ldi	r24, 0x22	; 34
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	2f ef       	ldi	r18, 0xFF	; 255
     21c:	fc 01       	movw	r30, r24
     21e:	20 83       	st	Z, r18
     220:	00 00       	nop
     222:	df 91       	pop	r29
     224:	cf 91       	pop	r28
     226:	08 95       	ret

00000228 <lcdBusyWait>:
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	cd b7       	in	r28, 0x3d	; 61
     22e:	de b7       	in	r29, 0x3e	; 62
     230:	85 e2       	ldi	r24, 0x25	; 37
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	25 e2       	ldi	r18, 0x25	; 37
     236:	30 e0       	ldi	r19, 0x00	; 0
     238:	f9 01       	movw	r30, r18
     23a:	20 81       	ld	r18, Z
     23c:	2f 7e       	andi	r18, 0xEF	; 239
     23e:	fc 01       	movw	r30, r24
     240:	20 83       	st	Z, r18
     242:	81 e2       	ldi	r24, 0x21	; 33
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	fc 01       	movw	r30, r24
     248:	10 82       	st	Z, r1
     24a:	82 e2       	ldi	r24, 0x22	; 34
     24c:	90 e0       	ldi	r25, 0x00	; 0
     24e:	2f ef       	ldi	r18, 0xFF	; 255
     250:	fc 01       	movw	r30, r24
     252:	20 83       	st	Z, r18
     254:	85 e2       	ldi	r24, 0x25	; 37
     256:	90 e0       	ldi	r25, 0x00	; 0
     258:	25 e2       	ldi	r18, 0x25	; 37
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	f9 01       	movw	r30, r18
     25e:	20 81       	ld	r18, Z
     260:	20 62       	ori	r18, 0x20	; 32
     262:	fc 01       	movw	r30, r24
     264:	20 83       	st	Z, r18
     266:	85 e2       	ldi	r24, 0x25	; 37
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	25 e2       	ldi	r18, 0x25	; 37
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	f9 01       	movw	r30, r18
     270:	20 81       	ld	r18, Z
     272:	20 64       	ori	r18, 0x40	; 64
     274:	fc 01       	movw	r30, r24
     276:	20 83       	st	Z, r18
     278:	00 00       	nop
     27a:	00 00       	nop
     27c:	00 00       	nop
     27e:	1e c0       	rjmp	.+60     	; 0x2bc <lcdBusyWait+0x94>
     280:	85 e2       	ldi	r24, 0x25	; 37
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	25 e2       	ldi	r18, 0x25	; 37
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	f9 01       	movw	r30, r18
     28a:	20 81       	ld	r18, Z
     28c:	2f 7b       	andi	r18, 0xBF	; 191
     28e:	fc 01       	movw	r30, r24
     290:	20 83       	st	Z, r18
	...
     29e:	85 e2       	ldi	r24, 0x25	; 37
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	25 e2       	ldi	r18, 0x25	; 37
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	f9 01       	movw	r30, r18
     2a8:	20 81       	ld	r18, Z
     2aa:	20 64       	ori	r18, 0x40	; 64
     2ac:	fc 01       	movw	r30, r24
     2ae:	20 83       	st	Z, r18
	...
     2bc:	80 e2       	ldi	r24, 0x20	; 32
     2be:	90 e0       	ldi	r25, 0x00	; 0
     2c0:	fc 01       	movw	r30, r24
     2c2:	80 81       	ld	r24, Z
     2c4:	88 23       	and	r24, r24
     2c6:	e4 f2       	brlt	.-72     	; 0x280 <lcdBusyWait+0x58>
     2c8:	85 e2       	ldi	r24, 0x25	; 37
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	25 e2       	ldi	r18, 0x25	; 37
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	f9 01       	movw	r30, r18
     2d2:	20 81       	ld	r18, Z
     2d4:	2f 7b       	andi	r18, 0xBF	; 191
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 83       	st	Z, r18
     2da:	00 00       	nop
     2dc:	df 91       	pop	r29
     2de:	cf 91       	pop	r28
     2e0:	08 95       	ret

000002e2 <lcdControlWrite>:
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	89 83       	std	Y+1, r24	; 0x01
     2ee:	9c df       	rcall	.-200    	; 0x228 <lcdBusyWait>
     2f0:	85 e2       	ldi	r24, 0x25	; 37
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	25 e2       	ldi	r18, 0x25	; 37
     2f6:	30 e0       	ldi	r19, 0x00	; 0
     2f8:	f9 01       	movw	r30, r18
     2fa:	20 81       	ld	r18, Z
     2fc:	2f 7e       	andi	r18, 0xEF	; 239
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	85 e2       	ldi	r24, 0x25	; 37
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	25 e2       	ldi	r18, 0x25	; 37
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	f9 01       	movw	r30, r18
     30c:	20 81       	ld	r18, Z
     30e:	2f 7d       	andi	r18, 0xDF	; 223
     310:	fc 01       	movw	r30, r24
     312:	20 83       	st	Z, r18
     314:	85 e2       	ldi	r24, 0x25	; 37
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	25 e2       	ldi	r18, 0x25	; 37
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	f9 01       	movw	r30, r18
     31e:	20 81       	ld	r18, Z
     320:	20 64       	ori	r18, 0x40	; 64
     322:	fc 01       	movw	r30, r24
     324:	20 83       	st	Z, r18
     326:	81 e2       	ldi	r24, 0x21	; 33
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	2f ef       	ldi	r18, 0xFF	; 255
     32c:	fc 01       	movw	r30, r24
     32e:	20 83       	st	Z, r18
     330:	82 e2       	ldi	r24, 0x22	; 34
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	29 81       	ldd	r18, Y+1	; 0x01
     336:	fc 01       	movw	r30, r24
     338:	20 83       	st	Z, r18
	...
     346:	85 e2       	ldi	r24, 0x25	; 37
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	25 e2       	ldi	r18, 0x25	; 37
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	f9 01       	movw	r30, r18
     350:	20 81       	ld	r18, Z
     352:	2f 7b       	andi	r18, 0xBF	; 191
     354:	fc 01       	movw	r30, r24
     356:	20 83       	st	Z, r18
     358:	81 e2       	ldi	r24, 0x21	; 33
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	fc 01       	movw	r30, r24
     35e:	10 82       	st	Z, r1
     360:	82 e2       	ldi	r24, 0x22	; 34
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	2f ef       	ldi	r18, 0xFF	; 255
     366:	fc 01       	movw	r30, r24
     368:	20 83       	st	Z, r18
     36a:	00 00       	nop
     36c:	0f 90       	pop	r0
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <lcdControlRead>:
     374:	1f 93       	push	r17
     376:	cf 93       	push	r28
     378:	df 93       	push	r29
     37a:	cd b7       	in	r28, 0x3d	; 61
     37c:	de b7       	in	r29, 0x3e	; 62
     37e:	54 df       	rcall	.-344    	; 0x228 <lcdBusyWait>
     380:	81 e2       	ldi	r24, 0x21	; 33
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	fc 01       	movw	r30, r24
     386:	10 82       	st	Z, r1
     388:	82 e2       	ldi	r24, 0x22	; 34
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	2f ef       	ldi	r18, 0xFF	; 255
     38e:	fc 01       	movw	r30, r24
     390:	20 83       	st	Z, r18
     392:	85 e2       	ldi	r24, 0x25	; 37
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	25 e2       	ldi	r18, 0x25	; 37
     398:	30 e0       	ldi	r19, 0x00	; 0
     39a:	f9 01       	movw	r30, r18
     39c:	20 81       	ld	r18, Z
     39e:	2f 7e       	andi	r18, 0xEF	; 239
     3a0:	fc 01       	movw	r30, r24
     3a2:	20 83       	st	Z, r18
     3a4:	85 e2       	ldi	r24, 0x25	; 37
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	25 e2       	ldi	r18, 0x25	; 37
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	f9 01       	movw	r30, r18
     3ae:	20 81       	ld	r18, Z
     3b0:	20 62       	ori	r18, 0x20	; 32
     3b2:	fc 01       	movw	r30, r24
     3b4:	20 83       	st	Z, r18
     3b6:	85 e2       	ldi	r24, 0x25	; 37
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	25 e2       	ldi	r18, 0x25	; 37
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	f9 01       	movw	r30, r18
     3c0:	20 81       	ld	r18, Z
     3c2:	20 64       	ori	r18, 0x40	; 64
     3c4:	fc 01       	movw	r30, r24
     3c6:	20 83       	st	Z, r18
	...
     3d4:	80 e2       	ldi	r24, 0x20	; 32
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	fc 01       	movw	r30, r24
     3da:	10 81       	ld	r17, Z
     3dc:	85 e2       	ldi	r24, 0x25	; 37
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	25 e2       	ldi	r18, 0x25	; 37
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	f9 01       	movw	r30, r18
     3e6:	20 81       	ld	r18, Z
     3e8:	2f 7b       	andi	r18, 0xBF	; 191
     3ea:	fc 01       	movw	r30, r24
     3ec:	20 83       	st	Z, r18
     3ee:	81 2f       	mov	r24, r17
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	08 95       	ret

000003f8 <lcdDataWrite>:
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	1f 92       	push	r1
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62
     402:	89 83       	std	Y+1, r24	; 0x01
     404:	11 df       	rcall	.-478    	; 0x228 <lcdBusyWait>
     406:	85 e2       	ldi	r24, 0x25	; 37
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	25 e2       	ldi	r18, 0x25	; 37
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	f9 01       	movw	r30, r18
     410:	20 81       	ld	r18, Z
     412:	20 61       	ori	r18, 0x10	; 16
     414:	fc 01       	movw	r30, r24
     416:	20 83       	st	Z, r18
     418:	85 e2       	ldi	r24, 0x25	; 37
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	25 e2       	ldi	r18, 0x25	; 37
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	f9 01       	movw	r30, r18
     422:	20 81       	ld	r18, Z
     424:	2f 7d       	andi	r18, 0xDF	; 223
     426:	fc 01       	movw	r30, r24
     428:	20 83       	st	Z, r18
     42a:	85 e2       	ldi	r24, 0x25	; 37
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	25 e2       	ldi	r18, 0x25	; 37
     430:	30 e0       	ldi	r19, 0x00	; 0
     432:	f9 01       	movw	r30, r18
     434:	20 81       	ld	r18, Z
     436:	20 64       	ori	r18, 0x40	; 64
     438:	fc 01       	movw	r30, r24
     43a:	20 83       	st	Z, r18
     43c:	81 e2       	ldi	r24, 0x21	; 33
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	2f ef       	ldi	r18, 0xFF	; 255
     442:	fc 01       	movw	r30, r24
     444:	20 83       	st	Z, r18
     446:	82 e2       	ldi	r24, 0x22	; 34
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	29 81       	ldd	r18, Y+1	; 0x01
     44c:	fc 01       	movw	r30, r24
     44e:	20 83       	st	Z, r18
	...
     45c:	85 e2       	ldi	r24, 0x25	; 37
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	25 e2       	ldi	r18, 0x25	; 37
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	f9 01       	movw	r30, r18
     466:	20 81       	ld	r18, Z
     468:	2f 7b       	andi	r18, 0xBF	; 191
     46a:	fc 01       	movw	r30, r24
     46c:	20 83       	st	Z, r18
     46e:	81 e2       	ldi	r24, 0x21	; 33
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	fc 01       	movw	r30, r24
     474:	10 82       	st	Z, r1
     476:	82 e2       	ldi	r24, 0x22	; 34
     478:	90 e0       	ldi	r25, 0x00	; 0
     47a:	2f ef       	ldi	r18, 0xFF	; 255
     47c:	fc 01       	movw	r30, r24
     47e:	20 83       	st	Z, r18
     480:	00 00       	nop
     482:	0f 90       	pop	r0
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	08 95       	ret

0000048a <lcdInit>:
/*************************************************************/
/********************* PUBLIC FUNCTIONS **********************/
/*************************************************************/

void lcdInit()
{
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	cd b7       	in	r28, 0x3d	; 61
	// initialize hardware
	lcdInitHW();
	// LCD function set
	lcdControlWrite(LCD_FUNCTION_DEFAULT);
     490:	de b7       	in	r29, 0x3e	; 62
	// clear LCD
	lcdControlWrite(1<<LCD_CLR);
     492:	83 de       	rcall	.-762    	; 0x19a <lcdInitHW>
     494:	88 e3       	ldi	r24, 0x38	; 56
	delay_ms(60);	// wait 60ms
     496:	25 df       	rcall	.-438    	; 0x2e2 <lcdControlWrite>
     498:	81 e0       	ldi	r24, 0x01	; 1
	// set entry mode
	lcdControlWrite(1<<LCD_ENTRY_MODE | 1<<LCD_ENTRY_INC);
     49a:	23 df       	rcall	.-442    	; 0x2e2 <lcdControlWrite>
	// set display to on
	//lcdControlWrite(1<<LCD_ON_CTRL | 1<<LCD_ON_DISPLAY | 1<<LCD_ON_BLINK);
	lcdControlWrite(1<<LCD_ON_CTRL | 1<<LCD_ON_DISPLAY);
     49c:	8c e3       	ldi	r24, 0x3C	; 60
     49e:	90 e0       	ldi	r25, 0x00	; 0
	// move cursor to home
	lcdControlWrite(1<<LCD_HOME);
     4a0:	5c de       	rcall	.-840    	; 0x15a <delay_ms>
     4a2:	86 e0       	ldi	r24, 0x06	; 6
	// set data address to 0
	lcdControlWrite(1<<LCD_DDRAM | 0x00);
     4a4:	1e df       	rcall	.-452    	; 0x2e2 <lcdControlWrite>
     4a6:	8c e0       	ldi	r24, 0x0C	; 12
     4a8:	1c df       	rcall	.-456    	; 0x2e2 <lcdControlWrite>

	// load the first 8 custom characters
	lcdLoadCustomChar((u08*)LcdCustomChar,0,0);
     4aa:	82 e0       	ldi	r24, 0x02	; 2
     4ac:	1a df       	rcall	.-460    	; 0x2e2 <lcdControlWrite>
     4ae:	80 e8       	ldi	r24, 0x80	; 128
     4b0:	18 df       	rcall	.-464    	; 0x2e2 <lcdControlWrite>
	lcdLoadCustomChar((u08*)LcdCustomChar,1,1);
     4b2:	40 e0       	ldi	r20, 0x00	; 0
     4b4:	60 e0       	ldi	r22, 0x00	; 0
     4b6:	84 e9       	ldi	r24, 0x94	; 148
     4b8:	90 e0       	ldi	r25, 0x00	; 0
	lcdLoadCustomChar((u08*)LcdCustomChar,2,2);
     4ba:	6e d0       	rcall	.+220    	; 0x598 <lcdLoadCustomChar>
     4bc:	41 e0       	ldi	r20, 0x01	; 1
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	84 e9       	ldi	r24, 0x94	; 148
     4c2:	90 e0       	ldi	r25, 0x00	; 0
	lcdLoadCustomChar((u08*)LcdCustomChar,3,3);
     4c4:	69 d0       	rcall	.+210    	; 0x598 <lcdLoadCustomChar>
     4c6:	42 e0       	ldi	r20, 0x02	; 2
     4c8:	62 e0       	ldi	r22, 0x02	; 2
     4ca:	84 e9       	ldi	r24, 0x94	; 148
     4cc:	90 e0       	ldi	r25, 0x00	; 0
	lcdLoadCustomChar((u08*)LcdCustomChar,4,4);
     4ce:	64 d0       	rcall	.+200    	; 0x598 <lcdLoadCustomChar>
     4d0:	43 e0       	ldi	r20, 0x03	; 3
     4d2:	63 e0       	ldi	r22, 0x03	; 3
     4d4:	84 e9       	ldi	r24, 0x94	; 148
     4d6:	90 e0       	ldi	r25, 0x00	; 0
	lcdLoadCustomChar((u08*)LcdCustomChar,5,5);
     4d8:	5f d0       	rcall	.+190    	; 0x598 <lcdLoadCustomChar>
     4da:	44 e0       	ldi	r20, 0x04	; 4
     4dc:	64 e0       	ldi	r22, 0x04	; 4
     4de:	84 e9       	ldi	r24, 0x94	; 148
     4e0:	90 e0       	ldi	r25, 0x00	; 0
	lcdLoadCustomChar((u08*)LcdCustomChar,6,6);
     4e2:	5a d0       	rcall	.+180    	; 0x598 <lcdLoadCustomChar>
     4e4:	45 e0       	ldi	r20, 0x05	; 5
     4e6:	65 e0       	ldi	r22, 0x05	; 5
     4e8:	84 e9       	ldi	r24, 0x94	; 148
     4ea:	90 e0       	ldi	r25, 0x00	; 0
     4ec:	55 d0       	rcall	.+170    	; 0x598 <lcdLoadCustomChar>
	lcdLoadCustomChar((u08*)LcdCustomChar,7,7);
     4ee:	46 e0       	ldi	r20, 0x06	; 6
     4f0:	66 e0       	ldi	r22, 0x06	; 6
     4f2:	84 e9       	ldi	r24, 0x94	; 148
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	50 d0       	rcall	.+160    	; 0x598 <lcdLoadCustomChar>
     4f8:	47 e0       	ldi	r20, 0x07	; 7
}
     4fa:	67 e0       	ldi	r22, 0x07	; 7
     4fc:	84 e9       	ldi	r24, 0x94	; 148
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	4b d0       	rcall	.+150    	; 0x598 <lcdLoadCustomChar>
     502:	00 00       	nop
     504:	df 91       	pop	r29
     506:	cf 91       	pop	r28
     508:	08 95       	ret

0000050a <lcdHome>:

void lcdHome(void)
{
     50a:	cf 93       	push	r28
     50c:	df 93       	push	r29
     50e:	cd b7       	in	r28, 0x3d	; 61
     510:	de b7       	in	r29, 0x3e	; 62
	// move cursor to home
	lcdControlWrite(1<<LCD_HOME);
     512:	82 e0       	ldi	r24, 0x02	; 2
     514:	e6 de       	rcall	.-564    	; 0x2e2 <lcdControlWrite>
}
     516:	00 00       	nop
     518:	df 91       	pop	r29
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <lcdClear>:

void lcdClear(void)
{
     51e:	cf 93       	push	r28
     520:	df 93       	push	r29
     522:	cd b7       	in	r28, 0x3d	; 61
     524:	de b7       	in	r29, 0x3e	; 62
	// clear LCD
	lcdControlWrite(1<<LCD_CLR);
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	dc de       	rcall	.-584    	; 0x2e2 <lcdControlWrite>
}
     52a:	00 00       	nop
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	08 95       	ret

00000532 <lcdGotoXY>:

void lcdGotoXY(u08 x, u08 y)
{
     532:	1f 93       	push	r17
     534:	cf 93       	push	r28
     536:	df 93       	push	r29
     538:	00 d0       	rcall	.+0      	; 0x53a <lcdGotoXY+0x8>
     53a:	cd b7       	in	r28, 0x3d	; 61
     53c:	de b7       	in	r29, 0x3e	; 62
     53e:	89 83       	std	Y+1, r24	; 0x01
     540:	6a 83       	std	Y+2, r22	; 0x02
	register u08 DDRAMAddr;

	// remap lines into proper order
	switch(y)
     542:	8a 81       	ldd	r24, Y+2	; 0x02
     544:	88 2f       	mov	r24, r24
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	81 30       	cpi	r24, 0x01	; 1
     54a:	91 05       	cpc	r25, r1
     54c:	71 f0       	breq	.+28     	; 0x56a <lcdGotoXY+0x38>
     54e:	82 30       	cpi	r24, 0x02	; 2
     550:	91 05       	cpc	r25, r1
     552:	1c f4       	brge	.+6      	; 0x55a <lcdGotoXY+0x28>
     554:	89 2b       	or	r24, r25
     556:	39 f0       	breq	.+14     	; 0x566 <lcdGotoXY+0x34>
     558:	14 c0       	rjmp	.+40     	; 0x582 <lcdGotoXY+0x50>
     55a:	82 30       	cpi	r24, 0x02	; 2
     55c:	91 05       	cpc	r25, r1
     55e:	49 f0       	breq	.+18     	; 0x572 <lcdGotoXY+0x40>
     560:	03 97       	sbiw	r24, 0x03	; 3
     562:	59 f0       	breq	.+22     	; 0x57a <lcdGotoXY+0x48>
     564:	0e c0       	rjmp	.+28     	; 0x582 <lcdGotoXY+0x50>
	{
	case 0: DDRAMAddr = LCD_LINE0_DDRAMADDR+x; break;
     566:	19 81       	ldd	r17, Y+1	; 0x01
     568:	0d c0       	rjmp	.+26     	; 0x584 <lcdGotoXY+0x52>
	case 1: DDRAMAddr = LCD_LINE1_DDRAMADDR+x; break;
     56a:	89 81       	ldd	r24, Y+1	; 0x01
     56c:	10 e4       	ldi	r17, 0x40	; 64
     56e:	18 0f       	add	r17, r24
     570:	09 c0       	rjmp	.+18     	; 0x584 <lcdGotoXY+0x52>
	case 2: DDRAMAddr = LCD_LINE2_DDRAMADDR+x; break;
     572:	89 81       	ldd	r24, Y+1	; 0x01
     574:	14 e1       	ldi	r17, 0x14	; 20
     576:	18 0f       	add	r17, r24
     578:	05 c0       	rjmp	.+10     	; 0x584 <lcdGotoXY+0x52>
	case 3: DDRAMAddr = LCD_LINE3_DDRAMADDR+x; break;
     57a:	89 81       	ldd	r24, Y+1	; 0x01
     57c:	14 e5       	ldi	r17, 0x54	; 84
     57e:	18 0f       	add	r17, r24
     580:	01 c0       	rjmp	.+2      	; 0x584 <lcdGotoXY+0x52>
	default: DDRAMAddr = LCD_LINE0_DDRAMADDR+x;
     582:	19 81       	ldd	r17, Y+1	; 0x01
	}

	// set data address
	lcdControlWrite(1<<LCD_DDRAM | DDRAMAddr);
     584:	81 2f       	mov	r24, r17
     586:	80 68       	ori	r24, 0x80	; 128
     588:	ac de       	rcall	.-680    	; 0x2e2 <lcdControlWrite>
}
     58a:	00 00       	nop
     58c:	0f 90       	pop	r0
     58e:	0f 90       	pop	r0
     590:	df 91       	pop	r29
     592:	cf 91       	pop	r28
     594:	1f 91       	pop	r17
     596:	08 95       	ret

00000598 <lcdLoadCustomChar>:

void lcdLoadCustomChar(u08* lcdCustomCharArray, u08 romCharNum, u08 lcdCharNum)
{
     598:	1f 93       	push	r17
     59a:	cf 93       	push	r28
     59c:	df 93       	push	r29
     59e:	cd b7       	in	r28, 0x3d	; 61
     5a0:	de b7       	in	r29, 0x3e	; 62
     5a2:	28 97       	sbiw	r28, 0x08	; 8
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
     5ae:	9e 83       	std	Y+6, r25	; 0x06
     5b0:	8d 83       	std	Y+5, r24	; 0x05
     5b2:	6f 83       	std	Y+7, r22	; 0x07
	register u08 i;
	u08 saveDDRAMAddr;

	// backup the current cursor position
	saveDDRAMAddr = lcdControlRead() & 0x7F;
     5b4:	48 87       	std	Y+8, r20	; 0x08
     5b6:	de de       	rcall	.-580    	; 0x374 <lcdControlRead>
     5b8:	8f 77       	andi	r24, 0x7F	; 127

	// multiply the character index by 8
	lcdCharNum = (lcdCharNum<<3);	// each character occupies 8 bytes
     5ba:	89 83       	std	Y+1, r24	; 0x01
     5bc:	88 85       	ldd	r24, Y+8	; 0x08
     5be:	88 0f       	add	r24, r24
     5c0:	88 0f       	add	r24, r24
     5c2:	88 0f       	add	r24, r24
	romCharNum = (romCharNum<<3);	// each character occupies 8 bytes
     5c4:	88 87       	std	Y+8, r24	; 0x08
     5c6:	8f 81       	ldd	r24, Y+7	; 0x07
     5c8:	88 0f       	add	r24, r24
     5ca:	88 0f       	add	r24, r24
     5cc:	88 0f       	add	r24, r24

	// copy the 8 bytes into CG (character generator) RAM
	for(i=0; i<8; i++)
     5ce:	8f 83       	std	Y+7, r24	; 0x07
     5d0:	10 e0       	ldi	r17, 0x00	; 0
	{
		// set CG RAM address
		lcdControlWrite((1<<LCD_CGRAM) | (lcdCharNum+i));
     5d2:	1b c0       	rjmp	.+54     	; 0x60a <lcdLoadCustomChar+0x72>
     5d4:	88 85       	ldd	r24, Y+8	; 0x08
     5d6:	81 0f       	add	r24, r17
     5d8:	80 64       	ori	r24, 0x40	; 64
		// write character data
		lcdDataWrite( pgm_read_byte(lcdCustomCharArray+romCharNum+i) );
     5da:	83 de       	rcall	.-762    	; 0x2e2 <lcdControlWrite>
     5dc:	8f 81       	ldd	r24, Y+7	; 0x07
     5de:	28 2f       	mov	r18, r24
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	81 2f       	mov	r24, r17
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	82 0f       	add	r24, r18
     5e8:	93 1f       	adc	r25, r19
     5ea:	2d 81       	ldd	r18, Y+5	; 0x05
     5ec:	3e 81       	ldd	r19, Y+6	; 0x06
     5ee:	82 0f       	add	r24, r18
     5f0:	93 1f       	adc	r25, r19
     5f2:	9b 83       	std	Y+3, r25	; 0x03
     5f4:	8a 83       	std	Y+2, r24	; 0x02
     5f6:	8a 81       	ldd	r24, Y+2	; 0x02
     5f8:	9b 81       	ldd	r25, Y+3	; 0x03
     5fa:	fc 01       	movw	r30, r24
     5fc:	84 91       	lpm	r24, Z
     5fe:	8c 83       	std	Y+4, r24	; 0x04
     600:	8c 81       	ldd	r24, Y+4	; 0x04
	// multiply the character index by 8
	lcdCharNum = (lcdCharNum<<3);	// each character occupies 8 bytes
	romCharNum = (romCharNum<<3);	// each character occupies 8 bytes

	// copy the 8 bytes into CG (character generator) RAM
	for(i=0; i<8; i++)
     602:	fa de       	rcall	.-524    	; 0x3f8 <lcdDataWrite>
     604:	81 2f       	mov	r24, r17
     606:	11 e0       	ldi	r17, 0x01	; 1
     608:	18 0f       	add	r17, r24
		// write character data
		lcdDataWrite( pgm_read_byte(lcdCustomCharArray+romCharNum+i) );
	}

	// restore the previous cursor position
	lcdControlWrite(1<<LCD_DDRAM | saveDDRAMAddr);
     60a:	18 30       	cpi	r17, 0x08	; 8
     60c:	18 f3       	brcs	.-58     	; 0x5d4 <lcdLoadCustomChar+0x3c>
     60e:	89 81       	ldd	r24, Y+1	; 0x01
     610:	80 68       	ori	r24, 0x80	; 128

}
     612:	67 de       	rcall	.-818    	; 0x2e2 <lcdControlWrite>
     614:	00 00       	nop
     616:	28 96       	adiw	r28, 0x08	; 8
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	1f 91       	pop	r17
     628:	08 95       	ret

0000062a <lcdPrintData>:

void lcdPrintData(char* data, u08 nBytes)
{
     62a:	1f 93       	push	r17
     62c:	cf 93       	push	r28
     62e:	df 93       	push	r29
     630:	00 d0       	rcall	.+0      	; 0x632 <lcdPrintData+0x8>
     632:	1f 92       	push	r1
     634:	cd b7       	in	r28, 0x3d	; 61
     636:	de b7       	in	r29, 0x3e	; 62
     638:	9a 83       	std	Y+2, r25	; 0x02
     63a:	89 83       	std	Y+1, r24	; 0x01
     63c:	6b 83       	std	Y+3, r22	; 0x03
	register u08 i;

	// check to make sure we have a good pointer
	if (!data) return;
     63e:	89 81       	ldd	r24, Y+1	; 0x01
     640:	9a 81       	ldd	r25, Y+2	; 0x02
     642:	89 2b       	or	r24, r25
     644:	91 f0       	breq	.+36     	; 0x66a <lcdPrintData+0x40>

	// print data
	for(i=0; i<nBytes; i++)
     646:	10 e0       	ldi	r17, 0x00	; 0
     648:	0c c0       	rjmp	.+24     	; 0x662 <lcdPrintData+0x38>
	{
		lcdDataWrite(data[i]);
     64a:	81 2f       	mov	r24, r17
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	29 81       	ldd	r18, Y+1	; 0x01
     650:	3a 81       	ldd	r19, Y+2	; 0x02
     652:	82 0f       	add	r24, r18
     654:	93 1f       	adc	r25, r19
     656:	fc 01       	movw	r30, r24
     658:	80 81       	ld	r24, Z
     65a:	ce de       	rcall	.-612    	; 0x3f8 <lcdDataWrite>

	// check to make sure we have a good pointer
	if (!data) return;

	// print data
	for(i=0; i<nBytes; i++)
     65c:	81 2f       	mov	r24, r17
     65e:	11 e0       	ldi	r17, 0x01	; 1
     660:	18 0f       	add	r17, r24
     662:	8b 81       	ldd	r24, Y+3	; 0x03
     664:	18 17       	cp	r17, r24
     666:	88 f3       	brcs	.-30     	; 0x64a <lcdPrintData+0x20>
     668:	01 c0       	rjmp	.+2      	; 0x66c <lcdPrintData+0x42>
void lcdPrintData(char* data, u08 nBytes)
{
	register u08 i;

	// check to make sure we have a good pointer
	if (!data) return;
     66a:	00 00       	nop
	// print data
	for(i=0; i<nBytes; i++)
	{
		lcdDataWrite(data[i]);
	}
}
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	0f 90       	pop	r0
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	08 95       	ret

0000067a <initGPIO>:
 * \return The character from the RX USART buffer
 */
unsigned char poll_usart1_receive(void ) {
	/* Check if data is received */
	return ((UCSR1A & (1<<RXC1)));
}
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	cd b7       	in	r28, 0x3d	; 61
     680:	de b7       	in	r29, 0x3e	; 62
     682:	84 e2       	ldi	r24, 0x24	; 36
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	24 e2       	ldi	r18, 0x24	; 36
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	f9 01       	movw	r30, r18
     68c:	20 81       	ld	r18, Z
     68e:	20 68       	ori	r18, 0x80	; 128
     690:	fc 01       	movw	r30, r24
     692:	20 83       	st	Z, r18
     694:	87 e2       	ldi	r24, 0x27	; 39
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	27 e0       	ldi	r18, 0x07	; 7
     69a:	fc 01       	movw	r30, r24
     69c:	20 83       	st	Z, r18
     69e:	83 e3       	ldi	r24, 0x33	; 51
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	23 e3       	ldi	r18, 0x33	; 51
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	f9 01       	movw	r30, r18
     6a8:	20 81       	ld	r18, Z
     6aa:	23 60       	ori	r18, 0x03	; 3
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	df 91       	pop	r29
     6b6:	cf 91       	pop	r28
     6b8:	08 95       	ret

000006ba <initExtInt>:
     6ba:	cf 93       	push	r28
     6bc:	df 93       	push	r29
     6be:	cd b7       	in	r28, 0x3d	; 61
     6c0:	de b7       	in	r29, 0x3e	; 62
     6c2:	8a e6       	ldi	r24, 0x6A	; 106
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	2a e6       	ldi	r18, 0x6A	; 106
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	f9 01       	movw	r30, r18
     6cc:	20 81       	ld	r18, Z
     6ce:	20 61       	ori	r18, 0x10	; 16
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18
     6d4:	8d e3       	ldi	r24, 0x3D	; 61
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	2d e3       	ldi	r18, 0x3D	; 61
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	f9 01       	movw	r30, r18
     6de:	20 81       	ld	r18, Z
     6e0:	20 64       	ori	r18, 0x40	; 64
     6e2:	fc 01       	movw	r30, r24
     6e4:	20 83       	st	Z, r18
     6e6:	86 e0       	ldi	r24, 0x06	; 6
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <initTimer2>:
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
     6f8:	80 eb       	ldi	r24, 0xB0	; 176
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	28 e0       	ldi	r18, 0x08	; 8
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18
     702:	80 eb       	ldi	r24, 0xB0	; 176
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	20 eb       	ldi	r18, 0xB0	; 176
     708:	30 e0       	ldi	r19, 0x00	; 0
     70a:	f9 01       	movw	r30, r18
     70c:	20 81       	ld	r18, Z
     70e:	26 60       	ori	r18, 0x06	; 6
     710:	fc 01       	movw	r30, r24
     712:	20 83       	st	Z, r18
     714:	82 eb       	ldi	r24, 0xB2	; 178
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	fc 01       	movw	r30, r24
     71a:	10 82       	st	Z, r1
     71c:	83 eb       	ldi	r24, 0xB3	; 179
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	2b e9       	ldi	r18, 0x9B	; 155
     722:	fc 01       	movw	r30, r24
     724:	20 83       	st	Z, r18
     726:	80 e7       	ldi	r24, 0x70	; 112
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	22 e0       	ldi	r18, 0x02	; 2
     72c:	fc 01       	movw	r30, r24
     72e:	20 83       	st	Z, r18
     730:	82 e0       	ldi	r24, 0x02	; 2
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	08 95       	ret

0000073a <initADC>:
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62
     742:	8c e7       	ldi	r24, 0x7C	; 124
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	2c e7       	ldi	r18, 0x7C	; 124
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	f9 01       	movw	r30, r18
     74c:	20 81       	ld	r18, Z
     74e:	2f 77       	andi	r18, 0x7F	; 127
     750:	fc 01       	movw	r30, r24
     752:	20 83       	st	Z, r18
     754:	8c e7       	ldi	r24, 0x7C	; 124
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	2c e7       	ldi	r18, 0x7C	; 124
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	f9 01       	movw	r30, r18
     75e:	20 81       	ld	r18, Z
     760:	20 64       	ori	r18, 0x40	; 64
     762:	fc 01       	movw	r30, r24
     764:	20 83       	st	Z, r18
     766:	8c e7       	ldi	r24, 0x7C	; 124
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	2c e7       	ldi	r18, 0x7C	; 124
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	f9 01       	movw	r30, r18
     770:	20 81       	ld	r18, Z
     772:	20 7e       	andi	r18, 0xE0	; 224
     774:	fc 01       	movw	r30, r24
     776:	20 83       	st	Z, r18
     778:	8c e7       	ldi	r24, 0x7C	; 124
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	2c e7       	ldi	r18, 0x7C	; 124
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	f9 01       	movw	r30, r18
     782:	20 81       	ld	r18, Z
     784:	2f 7d       	andi	r18, 0xDF	; 223
     786:	fc 01       	movw	r30, r24
     788:	20 83       	st	Z, r18
     78a:	8b e7       	ldi	r24, 0x7B	; 123
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	2b e7       	ldi	r18, 0x7B	; 123
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	f9 01       	movw	r30, r18
     794:	20 81       	ld	r18, Z
     796:	28 7f       	andi	r18, 0xF8	; 248
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18
     79c:	8a e7       	ldi	r24, 0x7A	; 122
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	2a e7       	ldi	r18, 0x7A	; 122
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	f9 01       	movw	r30, r18
     7a6:	20 81       	ld	r18, Z
     7a8:	27 60       	ori	r18, 0x07	; 7
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
     7ae:	8a e7       	ldi	r24, 0x7A	; 122
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	2a e7       	ldi	r18, 0x7A	; 122
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	f9 01       	movw	r30, r18
     7b8:	20 81       	ld	r18, Z
     7ba:	28 6a       	ori	r18, 0xA8	; 168
     7bc:	fc 01       	movw	r30, r24
     7be:	20 83       	st	Z, r18
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	90 e0       	ldi	r25, 0x00	; 0
     7c4:	df 91       	pop	r29
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <initDisplay>:
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	cd b7       	in	r28, 0x3d	; 61
     7d0:	de b7       	in	r29, 0x3e	; 62
     7d2:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <dbState+0x1>
     7d6:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <dbState>
     7da:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <subState+0x1>
     7de:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <subState>
     7e2:	53 de       	rcall	.-858    	; 0x48a <lcdInit>
     7e4:	9c de       	rcall	.-712    	; 0x51e <lcdClear>
     7e6:	91 de       	rcall	.-734    	; 0x50a <lcdHome>
     7e8:	65 e0       	ldi	r22, 0x05	; 5
     7ea:	88 e0       	ldi	r24, 0x08	; 8
     7ec:	91 e0       	ldi	r25, 0x01	; 1
     7ee:	1d df       	rcall	.-454    	; 0x62a <lcdPrintData>
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	df 91       	pop	r29
     7f6:	cf 91       	pop	r28
     7f8:	08 95       	ret

000007fa <usart1_init>:
     7fa:	cf 93       	push	r28
     7fc:	df 93       	push	r29
     7fe:	00 d0       	rcall	.+0      	; 0x800 <usart1_init+0x6>
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	9a 83       	std	Y+2, r25	; 0x02
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	8d ec       	ldi	r24, 0xCD	; 205
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	29 81       	ldd	r18, Y+1	; 0x01
     80e:	3a 81       	ldd	r19, Y+2	; 0x02
     810:	23 2f       	mov	r18, r19
     812:	33 27       	eor	r19, r19
     814:	fc 01       	movw	r30, r24
     816:	20 83       	st	Z, r18
     818:	8c ec       	ldi	r24, 0xCC	; 204
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	29 81       	ldd	r18, Y+1	; 0x01
     81e:	fc 01       	movw	r30, r24
     820:	20 83       	st	Z, r18
     822:	8a ec       	ldi	r24, 0xCA	; 202
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	26 e0       	ldi	r18, 0x06	; 6
     828:	fc 01       	movw	r30, r24
     82a:	20 83       	st	Z, r18
     82c:	89 ec       	ldi	r24, 0xC9	; 201
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	28 e1       	ldi	r18, 0x18	; 24
     832:	fc 01       	movw	r30, r24
     834:	20 83       	st	Z, r18
     836:	00 00       	nop
     838:	0f 90       	pop	r0
     83a:	0f 90       	pop	r0
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	08 95       	ret

00000842 <TimerCounter0setup>:
     842:	cf 93       	push	r28
     844:	df 93       	push	r29
     846:	00 d0       	rcall	.+0      	; 0x848 <TimerCounter0setup+0x6>
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
     84c:	9a 83       	std	Y+2, r25	; 0x02
     84e:	89 83       	std	Y+1, r24	; 0x01
     850:	84 e4       	ldi	r24, 0x44	; 68
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	20 e4       	ldi	r18, 0x40	; 64
     856:	fc 01       	movw	r30, r24
     858:	20 83       	st	Z, r18
     85a:	84 e4       	ldi	r24, 0x44	; 68
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	24 e4       	ldi	r18, 0x44	; 68
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	f9 01       	movw	r30, r18
     864:	20 81       	ld	r18, Z
     866:	20 63       	ori	r18, 0x30	; 48
     868:	fc 01       	movw	r30, r24
     86a:	20 83       	st	Z, r18
     86c:	84 e4       	ldi	r24, 0x44	; 68
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	24 e4       	ldi	r18, 0x44	; 68
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	f9 01       	movw	r30, r18
     876:	20 81       	ld	r18, Z
     878:	21 60       	ori	r18, 0x01	; 1
     87a:	fc 01       	movw	r30, r24
     87c:	20 83       	st	Z, r18
     87e:	87 e4       	ldi	r24, 0x47	; 71
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	29 81       	ldd	r18, Y+1	; 0x01
     884:	fc 01       	movw	r30, r24
     886:	20 83       	st	Z, r18
     888:	00 00       	nop
     88a:	0f 90       	pop	r0
     88c:	0f 90       	pop	r0
     88e:	df 91       	pop	r29
     890:	cf 91       	pop	r28
     892:	08 95       	ret

00000894 <usart1_transmit>:
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	1f 92       	push	r1
     89a:	cd b7       	in	r28, 0x3d	; 61
     89c:	de b7       	in	r29, 0x3e	; 62
     89e:	89 83       	std	Y+1, r24	; 0x01
     8a0:	00 00       	nop
     8a2:	88 ec       	ldi	r24, 0xC8	; 200
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	fc 01       	movw	r30, r24
     8a8:	80 81       	ld	r24, Z
     8aa:	88 2f       	mov	r24, r24
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	80 72       	andi	r24, 0x20	; 32
     8b0:	99 27       	eor	r25, r25
     8b2:	89 2b       	or	r24, r25
     8b4:	b1 f3       	breq	.-20     	; 0x8a2 <usart1_transmit+0xe>
     8b6:	8e ec       	ldi	r24, 0xCE	; 206
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	29 81       	ldd	r18, Y+1	; 0x01
     8bc:	fc 01       	movw	r30, r24
     8be:	20 83       	st	Z, r18
     8c0:	80 e0       	ldi	r24, 0x00	; 0
     8c2:	0f 90       	pop	r0
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	08 95       	ret

000008ca <usart1_sendstring>:
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <usart1_sendstring+0x6>
     8d0:	00 d0       	rcall	.+0      	; 0x8d2 <usart1_sendstring+0x8>
     8d2:	1f 92       	push	r1
     8d4:	cd b7       	in	r28, 0x3d	; 61
     8d6:	de b7       	in	r29, 0x3e	; 62
     8d8:	9c 83       	std	Y+4, r25	; 0x04
     8da:	8b 83       	std	Y+3, r24	; 0x03
     8dc:	6d 83       	std	Y+5, r22	; 0x05
     8de:	1a 82       	std	Y+2, r1	; 0x02
     8e0:	19 82       	std	Y+1, r1	; 0x01
     8e2:	0f c0       	rjmp	.+30     	; 0x902 <usart1_sendstring+0x38>
     8e4:	8b 81       	ldd	r24, Y+3	; 0x03
     8e6:	9c 81       	ldd	r25, Y+4	; 0x04
     8e8:	9c 01       	movw	r18, r24
     8ea:	2f 5f       	subi	r18, 0xFF	; 255
     8ec:	3f 4f       	sbci	r19, 0xFF	; 255
     8ee:	3c 83       	std	Y+4, r19	; 0x04
     8f0:	2b 83       	std	Y+3, r18	; 0x03
     8f2:	fc 01       	movw	r30, r24
     8f4:	80 81       	ld	r24, Z
     8f6:	ce df       	rcall	.-100    	; 0x894 <usart1_transmit>
     8f8:	89 81       	ldd	r24, Y+1	; 0x01
     8fa:	9a 81       	ldd	r25, Y+2	; 0x02
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	9a 83       	std	Y+2, r25	; 0x02
     900:	89 83       	std	Y+1, r24	; 0x01
     902:	8d 81       	ldd	r24, Y+5	; 0x05
     904:	28 2f       	mov	r18, r24
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	89 81       	ldd	r24, Y+1	; 0x01
     90a:	9a 81       	ldd	r25, Y+2	; 0x02
     90c:	82 17       	cp	r24, r18
     90e:	93 07       	cpc	r25, r19
     910:	4c f3       	brlt	.-46     	; 0x8e4 <usart1_sendstring+0x1a>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	0f 90       	pop	r0
     916:	0f 90       	pop	r0
     918:	0f 90       	pop	r0
     91a:	0f 90       	pop	r0
     91c:	0f 90       	pop	r0
     91e:	df 91       	pop	r29
     920:	cf 91       	pop	r28
     922:	08 95       	ret

00000924 <usart1_receive>:
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62
     92c:	00 00       	nop
     92e:	88 ec       	ldi	r24, 0xC8	; 200
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	fc 01       	movw	r30, r24
     934:	80 81       	ld	r24, Z
     936:	88 23       	and	r24, r24
     938:	d4 f7       	brge	.-12     	; 0x92e <usart1_receive+0xa>
     93a:	8e ec       	ldi	r24, 0xCE	; 206
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	fc 01       	movw	r30, r24
     940:	80 81       	ld	r24, Z
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	08 95       	ret

00000948 <dbStateUp>:

int dbStateUp(void)
{
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	cd b7       	in	r28, 0x3d	; 61
     94e:	de b7       	in	r29, 0x3e	; 62
	if (++dbState > DTOP)
     950:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     954:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <dbState+0x1>
     95e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <dbState>
     962:	04 97       	sbiw	r24, 0x04	; 4
     964:	30 f0       	brcs	.+12     	; 0x972 <dbStateUp+0x2a>
		dbState = DADC;
     966:	81 e0       	ldi	r24, 0x01	; 1
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <dbState+0x1>
     96e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <dbState>
	lcdClear();	//clear the LCD
	lcdHome();	//go to the home of the LCD
     972:	d5 dd       	rcall	.-1110   	; 0x51e <lcdClear>
	lcdPrintData(dbStateName[dbState], strlen(dbStateName[dbState])); //Display the text on the LCD
     974:	ca dd       	rcall	.-1132   	; 0x50a <lcdHome>
     976:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     97a:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     97e:	88 0f       	add	r24, r24
     980:	99 1f       	adc	r25, r25
     982:	80 50       	subi	r24, 0x00	; 0
     984:	9f 4f       	sbci	r25, 0xFF	; 255
     986:	fc 01       	movw	r30, r24
     988:	80 81       	ld	r24, Z
     98a:	91 81       	ldd	r25, Z+1	; 0x01
     98c:	07 d4       	rcall	.+2062   	; 0x119c <strlen>
     98e:	28 2f       	mov	r18, r24
     990:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     994:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     998:	88 0f       	add	r24, r24
     99a:	99 1f       	adc	r25, r25
     99c:	80 50       	subi	r24, 0x00	; 0
     99e:	9f 4f       	sbci	r25, 0xFF	; 255
     9a0:	fc 01       	movw	r30, r24
     9a2:	80 81       	ld	r24, Z
     9a4:	91 81       	ldd	r25, Z+1	; 0x01
     9a6:	62 2f       	mov	r22, r18
	return 0;
     9a8:	40 de       	rcall	.-896    	; 0x62a <lcdPrintData>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
}
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	df 91       	pop	r29
     9b0:	cf 91       	pop	r28

int initDisplay(void)
{
	dbState = DBOOT;
	subState = NORMAL;
	lcdInit();	//initialize the LCD
     9b2:	08 95       	ret

000009b4 <dbStateDown>:
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	cd b7       	in	r28, 0x3d	; 61
     9ba:	de b7       	in	r29, 0x3e	; 62
     9bc:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     9c0:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     9c4:	9c 01       	movw	r18, r24
     9c6:	21 50       	subi	r18, 0x01	; 1
     9c8:	31 09       	sbc	r19, r1
     9ca:	30 93 34 01 	sts	0x0134, r19	; 0x800134 <dbState+0x1>
     9ce:	20 93 33 01 	sts	0x0133, r18	; 0x800133 <dbState>
     9d2:	02 97       	sbiw	r24, 0x02	; 2
     9d4:	30 f4       	brcc	.+12     	; 0x9e2 <dbStateDown+0x2e>
     9d6:	83 e0       	ldi	r24, 0x03	; 3
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <dbState+0x1>
     9de:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <dbState>
     9e2:	9d dd       	rcall	.-1222   	; 0x51e <lcdClear>
     9e4:	92 dd       	rcall	.-1244   	; 0x50a <lcdHome>
     9e6:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     9ea:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     9ee:	88 0f       	add	r24, r24
     9f0:	99 1f       	adc	r25, r25
     9f2:	80 50       	subi	r24, 0x00	; 0
     9f4:	9f 4f       	sbci	r25, 0xFF	; 255
     9f6:	fc 01       	movw	r30, r24
     9f8:	80 81       	ld	r24, Z
     9fa:	91 81       	ldd	r25, Z+1	; 0x01
     9fc:	cf d3       	rcall	.+1950   	; 0x119c <strlen>
     9fe:	28 2f       	mov	r18, r24
     a00:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     a04:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     a08:	88 0f       	add	r24, r24
     a0a:	99 1f       	adc	r25, r25
     a0c:	80 50       	subi	r24, 0x00	; 0
     a0e:	9f 4f       	sbci	r25, 0xFF	; 255
     a10:	fc 01       	movw	r30, r24
     a12:	80 81       	ld	r24, Z
     a14:	91 81       	ldd	r25, Z+1	; 0x01
     a16:	62 2f       	mov	r22, r18
     a18:	08 de       	rcall	.-1008   	; 0x62a <lcdPrintData>
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	df 91       	pop	r29
     a20:	cf 91       	pop	r28
     a22:	08 95       	ret

00000a24 <DbBOOThandler>:
     a24:	cf 93       	push	r28
     a26:	df 93       	push	r29
     a28:	cd b7       	in	r28, 0x3d	; 61
     a2a:	de b7       	in	r29, 0x3e	; 62
     a2c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttons>
     a30:	88 2f       	mov	r24, r24
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	88 7f       	andi	r24, 0xF8	; 248
     a36:	99 27       	eor	r25, r25
     a38:	80 32       	cpi	r24, 0x20	; 32
     a3a:	91 05       	cpc	r25, r1
     a3c:	a1 f0       	breq	.+40     	; 0xa66 <DbBOOThandler+0x42>
     a3e:	81 32       	cpi	r24, 0x21	; 33
     a40:	91 05       	cpc	r25, r1
     a42:	34 f4       	brge	.+12     	; 0xa50 <DbBOOThandler+0x2c>
     a44:	88 30       	cpi	r24, 0x08	; 8
     a46:	91 05       	cpc	r25, r1
     a48:	81 f0       	breq	.+32     	; 0xa6a <DbBOOThandler+0x46>
     a4a:	40 97       	sbiw	r24, 0x10	; 16
     a4c:	51 f0       	breq	.+20     	; 0xa62 <DbBOOThandler+0x3e>
     a4e:	10 c0       	rjmp	.+32     	; 0xa70 <DbBOOThandler+0x4c>
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	21 f0       	breq	.+8      	; 0xa5e <DbBOOThandler+0x3a>
     a56:	80 38       	cpi	r24, 0x80	; 128
     a58:	91 05       	cpc	r25, r1
     a5a:	49 f0       	breq	.+18     	; 0xa6e <DbBOOThandler+0x4a>
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <DbBOOThandler+0x4c>
     a5e:	74 df       	rcall	.-280    	; 0x948 <dbStateUp>
     a60:	07 c0       	rjmp	.+14     	; 0xa70 <DbBOOThandler+0x4c>
     a62:	a8 df       	rcall	.-176    	; 0x9b4 <dbStateDown>
     a64:	05 c0       	rjmp	.+10     	; 0xa70 <DbBOOThandler+0x4c>
     a66:	00 00       	nop
     a68:	03 c0       	rjmp	.+6      	; 0xa70 <DbBOOThandler+0x4c>
     a6a:	00 00       	nop
     a6c:	01 c0       	rjmp	.+2      	; 0xa70 <DbBOOThandler+0x4c>
     a6e:	00 00       	nop
     a70:	80 e0       	ldi	r24, 0x00	; 0
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	df 91       	pop	r29
     a76:	cf 91       	pop	r28
     a78:	08 95       	ret

00000a7a <DbADChandler>:
     a7a:	cf 93       	push	r28
     a7c:	df 93       	push	r29
     a7e:	cd b7       	in	r28, 0x3d	; 61
     a80:	de b7       	in	r29, 0x3e	; 62
     a82:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttons>
     a86:	88 2f       	mov	r24, r24
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	88 7f       	andi	r24, 0xF8	; 248
     a8c:	99 27       	eor	r25, r25
     a8e:	80 32       	cpi	r24, 0x20	; 32
     a90:	91 05       	cpc	r25, r1
     a92:	a1 f0       	breq	.+40     	; 0xabc <DbADChandler+0x42>
     a94:	81 32       	cpi	r24, 0x21	; 33
     a96:	91 05       	cpc	r25, r1
     a98:	34 f4       	brge	.+12     	; 0xaa6 <DbADChandler+0x2c>
     a9a:	88 30       	cpi	r24, 0x08	; 8
     a9c:	91 05       	cpc	r25, r1
     a9e:	81 f0       	breq	.+32     	; 0xac0 <DbADChandler+0x46>
     aa0:	40 97       	sbiw	r24, 0x10	; 16
     aa2:	51 f0       	breq	.+20     	; 0xab8 <DbADChandler+0x3e>
     aa4:	10 c0       	rjmp	.+32     	; 0xac6 <DbADChandler+0x4c>
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	21 f0       	breq	.+8      	; 0xab4 <DbADChandler+0x3a>
     aac:	80 38       	cpi	r24, 0x80	; 128
     aae:	91 05       	cpc	r25, r1
     ab0:	49 f0       	breq	.+18     	; 0xac4 <DbADChandler+0x4a>
     ab2:	09 c0       	rjmp	.+18     	; 0xac6 <DbADChandler+0x4c>
     ab4:	49 df       	rcall	.-366    	; 0x948 <dbStateUp>
     ab6:	07 c0       	rjmp	.+14     	; 0xac6 <DbADChandler+0x4c>
     ab8:	7d df       	rcall	.-262    	; 0x9b4 <dbStateDown>
     aba:	05 c0       	rjmp	.+10     	; 0xac6 <DbADChandler+0x4c>
     abc:	00 00       	nop
     abe:	03 c0       	rjmp	.+6      	; 0xac6 <DbADChandler+0x4c>
     ac0:	00 00       	nop
     ac2:	01 c0       	rjmp	.+2      	; 0xac6 <DbADChandler+0x4c>
     ac4:	00 00       	nop
     ac6:	80 e0       	ldi	r24, 0x00	; 0
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <DbUSARThandler>:
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttons>
     adc:	88 2f       	mov	r24, r24
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	88 7f       	andi	r24, 0xF8	; 248
     ae2:	99 27       	eor	r25, r25
     ae4:	80 32       	cpi	r24, 0x20	; 32
     ae6:	91 05       	cpc	r25, r1
     ae8:	41 f1       	breq	.+80     	; 0xb3a <DbUSARThandler+0x6a>
     aea:	81 32       	cpi	r24, 0x21	; 33
     aec:	91 05       	cpc	r25, r1
     aee:	34 f4       	brge	.+12     	; 0xafc <DbUSARThandler+0x2c>
     af0:	88 30       	cpi	r24, 0x08	; 8
     af2:	91 05       	cpc	r25, r1
     af4:	21 f1       	breq	.+72     	; 0xb3e <DbUSARThandler+0x6e>
     af6:	40 97       	sbiw	r24, 0x10	; 16
     af8:	f1 f0       	breq	.+60     	; 0xb36 <DbUSARThandler+0x66>
     afa:	24 c0       	rjmp	.+72     	; 0xb44 <DbUSARThandler+0x74>
     afc:	80 34       	cpi	r24, 0x40	; 64
     afe:	91 05       	cpc	r25, r1
     b00:	c1 f0       	breq	.+48     	; 0xb32 <DbUSARThandler+0x62>
     b02:	80 38       	cpi	r24, 0x80	; 128
     b04:	91 05       	cpc	r25, r1
     b06:	09 f0       	breq	.+2      	; 0xb0a <DbUSARThandler+0x3a>
     b08:	1d c0       	rjmp	.+58     	; 0xb44 <DbUSARThandler+0x74>
     b0a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     b0e:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     b12:	89 2b       	or	r24, r25
     b14:	b1 f4       	brne	.+44     	; 0xb42 <DbUSARThandler+0x72>
     b16:	82 e0       	ldi	r24, 0x02	; 2
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <subState+0x1>
     b1e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <subState>
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	88 e0       	ldi	r24, 0x08	; 8
     b26:	05 dd       	rcall	.-1526   	; 0x532 <lcdGotoXY>
     b28:	66 e0       	ldi	r22, 0x06	; 6
     b2a:	8d e1       	ldi	r24, 0x1D	; 29
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	7d dd       	rcall	.-1286   	; 0x62a <lcdPrintData>
     b30:	08 c0       	rjmp	.+16     	; 0xb42 <DbUSARThandler+0x72>
     b32:	0a df       	rcall	.-492    	; 0x948 <dbStateUp>
     b34:	07 c0       	rjmp	.+14     	; 0xb44 <DbUSARThandler+0x74>
     b36:	3e df       	rcall	.-388    	; 0x9b4 <dbStateDown>
     b38:	05 c0       	rjmp	.+10     	; 0xb44 <DbUSARThandler+0x74>
     b3a:	00 00       	nop
     b3c:	03 c0       	rjmp	.+6      	; 0xb44 <DbUSARThandler+0x74>
     b3e:	00 00       	nop
     b40:	01 c0       	rjmp	.+2      	; 0xb44 <DbUSARThandler+0x74>
     b42:	00 00       	nop
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	df 91       	pop	r29
     b4a:	cf 91       	pop	r28
     b4c:	08 95       	ret

00000b4e <DbTEXThandler>:
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	00 d0       	rcall	.+0      	; 0xb54 <DbTEXThandler+0x6>
     b54:	00 d0       	rcall	.+0      	; 0xb56 <DbTEXThandler+0x8>
     b56:	cd b7       	in	r28, 0x3d	; 61
     b58:	de b7       	in	r29, 0x3e	; 62
     b5a:	9a 83       	std	Y+2, r25	; 0x02
     b5c:	89 83       	std	Y+1, r24	; 0x01
     b5e:	7c 83       	std	Y+4, r23	; 0x04
     b60:	6b 83       	std	Y+3, r22	; 0x03
     b62:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttons>
     b66:	88 2f       	mov	r24, r24
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	88 7f       	andi	r24, 0xF8	; 248
     b6c:	99 27       	eor	r25, r25
     b6e:	80 32       	cpi	r24, 0x20	; 32
     b70:	91 05       	cpc	r25, r1
     b72:	09 f4       	brne	.+2      	; 0xb76 <DbTEXThandler+0x28>
     b74:	5d c0       	rjmp	.+186    	; 0xc30 <DbTEXThandler+0xe2>
     b76:	81 32       	cpi	r24, 0x21	; 33
     b78:	91 05       	cpc	r25, r1
     b7a:	44 f4       	brge	.+16     	; 0xb8c <DbTEXThandler+0x3e>
     b7c:	88 30       	cpi	r24, 0x08	; 8
     b7e:	91 05       	cpc	r25, r1
     b80:	09 f4       	brne	.+2      	; 0xb84 <DbTEXThandler+0x36>
     b82:	86 c0       	rjmp	.+268    	; 0xc90 <DbTEXThandler+0x142>
     b84:	40 97       	sbiw	r24, 0x10	; 16
     b86:	09 f4       	brne	.+2      	; 0xb8a <DbTEXThandler+0x3c>
     b88:	65 c0       	rjmp	.+202    	; 0xc54 <DbTEXThandler+0x106>
     b8a:	ab c0       	rjmp	.+342    	; 0xce2 <DbTEXThandler+0x194>
     b8c:	80 34       	cpi	r24, 0x40	; 64
     b8e:	91 05       	cpc	r25, r1
     b90:	81 f1       	breq	.+96     	; 0xbf2 <DbTEXThandler+0xa4>
     b92:	80 38       	cpi	r24, 0x80	; 128
     b94:	91 05       	cpc	r25, r1
     b96:	09 f0       	breq	.+2      	; 0xb9a <DbTEXThandler+0x4c>
     b98:	a4 c0       	rjmp	.+328    	; 0xce2 <DbTEXThandler+0x194>
     b9a:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     b9e:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     ba2:	89 2b       	or	r24, r25
     ba4:	71 f4       	brne	.+28     	; 0xbc2 <DbTEXThandler+0x74>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <subState+0x1>
     bae:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <subState>
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	88 e0       	ldi	r24, 0x08	; 8
     bb6:	bd dc       	rcall	.-1670   	; 0x532 <lcdGotoXY>
     bb8:	66 e0       	ldi	r22, 0x06	; 6
     bba:	84 e2       	ldi	r24, 0x24	; 36
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	35 dd       	rcall	.-1430   	; 0x62a <lcdPrintData>
     bc0:	90 c0       	rjmp	.+288    	; 0xce2 <DbTEXThandler+0x194>
     bc2:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <subState+0x1>
     bc6:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <subState>
     bca:	8d e0       	ldi	r24, 0x0D	; 13
     bcc:	63 de       	rcall	.-826    	; 0x894 <usart1_transmit>
     bce:	89 81       	ldd	r24, Y+1	; 0x01
     bd0:	9a 81       	ldd	r25, Y+2	; 0x02
     bd2:	e4 d2       	rcall	.+1480   	; 0x119c <strlen>
     bd4:	28 2f       	mov	r18, r24
     bd6:	89 81       	ldd	r24, Y+1	; 0x01
     bd8:	9a 81       	ldd	r25, Y+2	; 0x02
     bda:	62 2f       	mov	r22, r18
     bdc:	76 de       	rcall	.-788    	; 0x8ca <usart1_sendstring>
     bde:	8a e0       	ldi	r24, 0x0A	; 10
     be0:	59 de       	rcall	.-846    	; 0x894 <usart1_transmit>
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	88 e0       	ldi	r24, 0x08	; 8
     be6:	a5 dc       	rcall	.-1718   	; 0x532 <lcdGotoXY>
     be8:	66 e0       	ldi	r22, 0x06	; 6
     bea:	8b e2       	ldi	r24, 0x2B	; 43
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	1d dd       	rcall	.-1478   	; 0x62a <lcdPrintData>
     bf0:	78 c0       	rjmp	.+240    	; 0xce2 <DbTEXThandler+0x194>
     bf2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     bf6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     bfa:	01 97       	sbiw	r24, 0x01	; 1
     bfc:	b9 f4       	brne	.+46     	; 0xc2c <DbTEXThandler+0xde>
     bfe:	29 81       	ldd	r18, Y+1	; 0x01
     c00:	3a 81       	ldd	r19, Y+2	; 0x02
     c02:	8b 81       	ldd	r24, Y+3	; 0x03
     c04:	9c 81       	ldd	r25, Y+4	; 0x04
     c06:	82 0f       	add	r24, r18
     c08:	93 1f       	adc	r25, r19
     c0a:	fc 01       	movw	r30, r24
     c0c:	80 81       	ld	r24, Z
     c0e:	8a 37       	cpi	r24, 0x7A	; 122
     c10:	08 f0       	brcs	.+2      	; 0xc14 <DbTEXThandler+0xc6>
     c12:	60 c0       	rjmp	.+192    	; 0xcd4 <DbTEXThandler+0x186>
     c14:	29 81       	ldd	r18, Y+1	; 0x01
     c16:	3a 81       	ldd	r19, Y+2	; 0x02
     c18:	8b 81       	ldd	r24, Y+3	; 0x03
     c1a:	9c 81       	ldd	r25, Y+4	; 0x04
     c1c:	82 0f       	add	r24, r18
     c1e:	93 1f       	adc	r25, r19
     c20:	fc 01       	movw	r30, r24
     c22:	20 81       	ld	r18, Z
     c24:	2f 5f       	subi	r18, 0xFF	; 255
     c26:	fc 01       	movw	r30, r24
     c28:	20 83       	st	Z, r18
     c2a:	54 c0       	rjmp	.+168    	; 0xcd4 <DbTEXThandler+0x186>
     c2c:	8d de       	rcall	.-742    	; 0x948 <dbStateUp>
     c2e:	52 c0       	rjmp	.+164    	; 0xcd4 <DbTEXThandler+0x186>
     c30:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     c34:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     c38:	01 97       	sbiw	r24, 0x01	; 1
     c3a:	09 f0       	breq	.+2      	; 0xc3e <DbTEXThandler+0xf0>
     c3c:	4d c0       	rjmp	.+154    	; 0xcd8 <DbTEXThandler+0x18a>
     c3e:	8b 81       	ldd	r24, Y+3	; 0x03
     c40:	9c 81       	ldd	r25, Y+4	; 0x04
     c42:	89 2b       	or	r24, r25
     c44:	09 f4       	brne	.+2      	; 0xc48 <DbTEXThandler+0xfa>
     c46:	48 c0       	rjmp	.+144    	; 0xcd8 <DbTEXThandler+0x18a>
     c48:	8b 81       	ldd	r24, Y+3	; 0x03
     c4a:	9c 81       	ldd	r25, Y+4	; 0x04
     c4c:	01 97       	sbiw	r24, 0x01	; 1
     c4e:	9c 83       	std	Y+4, r25	; 0x04
     c50:	8b 83       	std	Y+3, r24	; 0x03
     c52:	42 c0       	rjmp	.+132    	; 0xcd8 <DbTEXThandler+0x18a>
     c54:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     c58:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     c5c:	01 97       	sbiw	r24, 0x01	; 1
     c5e:	b1 f4       	brne	.+44     	; 0xc8c <DbTEXThandler+0x13e>
     c60:	29 81       	ldd	r18, Y+1	; 0x01
     c62:	3a 81       	ldd	r19, Y+2	; 0x02
     c64:	8b 81       	ldd	r24, Y+3	; 0x03
     c66:	9c 81       	ldd	r25, Y+4	; 0x04
     c68:	82 0f       	add	r24, r18
     c6a:	93 1f       	adc	r25, r19
     c6c:	fc 01       	movw	r30, r24
     c6e:	80 81       	ld	r24, Z
     c70:	82 34       	cpi	r24, 0x42	; 66
     c72:	a0 f1       	brcs	.+104    	; 0xcdc <DbTEXThandler+0x18e>
     c74:	29 81       	ldd	r18, Y+1	; 0x01
     c76:	3a 81       	ldd	r19, Y+2	; 0x02
     c78:	8b 81       	ldd	r24, Y+3	; 0x03
     c7a:	9c 81       	ldd	r25, Y+4	; 0x04
     c7c:	82 0f       	add	r24, r18
     c7e:	93 1f       	adc	r25, r19
     c80:	fc 01       	movw	r30, r24
     c82:	20 81       	ld	r18, Z
     c84:	21 50       	subi	r18, 0x01	; 1
     c86:	fc 01       	movw	r30, r24
     c88:	20 83       	st	Z, r18
     c8a:	28 c0       	rjmp	.+80     	; 0xcdc <DbTEXThandler+0x18e>
     c8c:	93 de       	rcall	.-730    	; 0x9b4 <dbStateDown>
     c8e:	26 c0       	rjmp	.+76     	; 0xcdc <DbTEXThandler+0x18e>
     c90:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     c94:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     c98:	01 97       	sbiw	r24, 0x01	; 1
     c9a:	11 f5       	brne	.+68     	; 0xce0 <DbTEXThandler+0x192>
     c9c:	8b 81       	ldd	r24, Y+3	; 0x03
     c9e:	9c 81       	ldd	r25, Y+4	; 0x04
     ca0:	0f 97       	sbiw	r24, 0x0f	; 15
     ca2:	f0 f4       	brcc	.+60     	; 0xce0 <DbTEXThandler+0x192>
     ca4:	8b 81       	ldd	r24, Y+3	; 0x03
     ca6:	9c 81       	ldd	r25, Y+4	; 0x04
     ca8:	01 96       	adiw	r24, 0x01	; 1
     caa:	9c 83       	std	Y+4, r25	; 0x04
     cac:	8b 83       	std	Y+3, r24	; 0x03
     cae:	29 81       	ldd	r18, Y+1	; 0x01
     cb0:	3a 81       	ldd	r19, Y+2	; 0x02
     cb2:	8b 81       	ldd	r24, Y+3	; 0x03
     cb4:	9c 81       	ldd	r25, Y+4	; 0x04
     cb6:	82 0f       	add	r24, r18
     cb8:	93 1f       	adc	r25, r19
     cba:	21 e4       	ldi	r18, 0x41	; 65
     cbc:	fc 01       	movw	r30, r24
     cbe:	20 83       	st	Z, r18
     cc0:	8b 81       	ldd	r24, Y+3	; 0x03
     cc2:	9c 81       	ldd	r25, Y+4	; 0x04
     cc4:	01 96       	adiw	r24, 0x01	; 1
     cc6:	29 81       	ldd	r18, Y+1	; 0x01
     cc8:	3a 81       	ldd	r19, Y+2	; 0x02
     cca:	82 0f       	add	r24, r18
     ccc:	93 1f       	adc	r25, r19
     cce:	fc 01       	movw	r30, r24
     cd0:	10 82       	st	Z, r1
     cd2:	06 c0       	rjmp	.+12     	; 0xce0 <DbTEXThandler+0x192>
     cd4:	00 00       	nop
     cd6:	05 c0       	rjmp	.+10     	; 0xce2 <DbTEXThandler+0x194>
     cd8:	00 00       	nop
     cda:	03 c0       	rjmp	.+6      	; 0xce2 <DbTEXThandler+0x194>
     cdc:	00 00       	nop
     cde:	01 c0       	rjmp	.+2      	; 0xce2 <DbTEXThandler+0x194>
     ce0:	00 00       	nop
     ce2:	8b 81       	ldd	r24, Y+3	; 0x03
     ce4:	9c 81       	ldd	r25, Y+4	; 0x04
     ce6:	0f 90       	pop	r0
     ce8:	0f 90       	pop	r0
     cea:	0f 90       	pop	r0
     cec:	0f 90       	pop	r0
     cee:	df 91       	pop	r29
     cf0:	cf 91       	pop	r28
     cf2:	08 95       	ret

00000cf4 <flashLEDs>:
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	1f 92       	push	r1
     cfa:	cd b7       	in	r28, 0x3d	; 61
     cfc:	de b7       	in	r29, 0x3e	; 62
     cfe:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <LEDcountD>
     d02:	88 23       	and	r24, r24
     d04:	31 f0       	breq	.+12     	; 0xd12 <flashLEDs+0x1e>
     d06:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <LEDcountD>
     d0a:	81 50       	subi	r24, 0x01	; 1
     d0c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <LEDcountD>
     d10:	60 c0       	rjmp	.+192    	; 0xdd2 <flashLEDs+0xde>
     d12:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <LEDperiod>
     d16:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <LEDcountD>
     d1a:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <LEDpattern>
     d1e:	8f 71       	andi	r24, 0x1F	; 31
     d20:	89 83       	std	Y+1, r24	; 0x01
     d22:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <LEDpattern>
     d26:	88 2f       	mov	r24, r24
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	80 7e       	andi	r24, 0xE0	; 224
     d2c:	99 27       	eor	r25, r25
     d2e:	80 34       	cpi	r24, 0x40	; 64
     d30:	91 05       	cpc	r25, r1
     d32:	b9 f0       	breq	.+46     	; 0xd62 <flashLEDs+0x6e>
     d34:	80 38       	cpi	r24, 0x80	; 128
     d36:	91 05       	cpc	r25, r1
     d38:	19 f0       	breq	.+6      	; 0xd40 <flashLEDs+0x4c>
     d3a:	80 97       	sbiw	r24, 0x20	; 32
     d3c:	c9 f0       	breq	.+50     	; 0xd70 <flashLEDs+0x7c>
     d3e:	27 c0       	rjmp	.+78     	; 0xd8e <flashLEDs+0x9a>
     d40:	89 81       	ldd	r24, Y+1	; 0x01
     d42:	88 0f       	add	r24, r24
     d44:	89 83       	std	Y+1, r24	; 0x01
     d46:	89 81       	ldd	r24, Y+1	; 0x01
     d48:	88 2f       	mov	r24, r24
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	80 72       	andi	r24, 0x20	; 32
     d4e:	99 27       	eor	r25, r25
     d50:	89 2b       	or	r24, r25
     d52:	e1 f0       	breq	.+56     	; 0xd8c <flashLEDs+0x98>
     d54:	89 81       	ldd	r24, Y+1	; 0x01
     d56:	81 60       	ori	r24, 0x01	; 1
     d58:	89 83       	std	Y+1, r24	; 0x01
     d5a:	89 81       	ldd	r24, Y+1	; 0x01
     d5c:	8f 7d       	andi	r24, 0xDF	; 223
     d5e:	89 83       	std	Y+1, r24	; 0x01
     d60:	15 c0       	rjmp	.+42     	; 0xd8c <flashLEDs+0x98>
     d62:	89 81       	ldd	r24, Y+1	; 0x01
     d64:	80 95       	com	r24
     d66:	89 83       	std	Y+1, r24	; 0x01
     d68:	89 81       	ldd	r24, Y+1	; 0x01
     d6a:	8f 71       	andi	r24, 0x1F	; 31
     d6c:	89 83       	std	Y+1, r24	; 0x01
     d6e:	0f c0       	rjmp	.+30     	; 0xd8e <flashLEDs+0x9a>
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	88 2f       	mov	r24, r24
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	81 70       	andi	r24, 0x01	; 1
     d78:	99 27       	eor	r25, r25
     d7a:	89 2b       	or	r24, r25
     d7c:	19 f0       	breq	.+6      	; 0xd84 <flashLEDs+0x90>
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	80 62       	ori	r24, 0x20	; 32
     d82:	89 83       	std	Y+1, r24	; 0x01
     d84:	89 81       	ldd	r24, Y+1	; 0x01
     d86:	86 95       	lsr	r24
     d88:	89 83       	std	Y+1, r24	; 0x01
     d8a:	01 c0       	rjmp	.+2      	; 0xd8e <flashLEDs+0x9a>
     d8c:	00 00       	nop
     d8e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <LEDpattern>
     d92:	98 2f       	mov	r25, r24
     d94:	90 7e       	andi	r25, 0xE0	; 224
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	89 2b       	or	r24, r25
     d9a:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
     d9e:	84 e3       	ldi	r24, 0x34	; 52
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	fc 01       	movw	r30, r24
     da4:	80 81       	ld	r24, Z
     da6:	84 e3       	ldi	r24, 0x34	; 52
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	29 81       	ldd	r18, Y+1	; 0x01
     dac:	23 70       	andi	r18, 0x03	; 3
     dae:	fc 01       	movw	r30, r24
     db0:	20 83       	st	Z, r18
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	86 95       	lsr	r24
     db6:	86 95       	lsr	r24
     db8:	89 83       	std	Y+1, r24	; 0x01
     dba:	88 e2       	ldi	r24, 0x28	; 40
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	28 e2       	ldi	r18, 0x28	; 40
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	f9 01       	movw	r30, r18
     dc4:	20 81       	ld	r18, Z
     dc6:	32 2f       	mov	r19, r18
     dc8:	38 7f       	andi	r19, 0xF8	; 248
     dca:	29 81       	ldd	r18, Y+1	; 0x01
     dcc:	23 2b       	or	r18, r19
     dce:	fc 01       	movw	r30, r24
     dd0:	20 83       	st	Z, r18
     dd2:	00 00       	nop
     dd4:	0f 90       	pop	r0
     dd6:	df 91       	pop	r29
     dd8:	cf 91       	pop	r28
     dda:	08 95       	ret

00000ddc <main>:
     ddc:	cf 93       	push	r28
     dde:	df 93       	push	r29
     de0:	cd b7       	in	r28, 0x3d	; 61
     de2:	de b7       	in	r29, 0x3e	; 62
     de4:	a9 97       	sbiw	r28, 0x29	; 41
     de6:	0f b6       	in	r0, 0x3f	; 63
     de8:	f8 94       	cli
     dea:	de bf       	out	0x3e, r29	; 62
     dec:	0f be       	out	0x3f, r0	; 63
     dee:	cd bf       	out	0x3d, r28	; 61
     df0:	8f e0       	ldi	r24, 0x0F	; 15
     df2:	89 83       	std	Y+1, r24	; 0x01
     df4:	1b 82       	std	Y+3, r1	; 0x03
     df6:	81 e4       	ldi	r24, 0x41	; 65
     df8:	89 8f       	std	Y+25, r24	; 0x19
     dfa:	1a 8e       	std	Y+26, r1	; 0x1a
     dfc:	84 e4       	ldi	r24, 0x44	; 68
     dfe:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
     e02:	84 e6       	ldi	r24, 0x64	; 100
     e04:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <LEDperiod>
     e08:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <LEDcountD>
     e0c:	36 dc       	rcall	.-1940   	; 0x67a <initGPIO>
     e0e:	89 83       	std	Y+1, r24	; 0x01
     e10:	54 dc       	rcall	.-1880   	; 0x6ba <initExtInt>
     e12:	89 83       	std	Y+1, r24	; 0x01
     e14:	6d dc       	rcall	.-1830   	; 0x6f0 <initTimer2>
     e16:	89 83       	std	Y+1, r24	; 0x01
     e18:	90 dc       	rcall	.-1760   	; 0x73a <initADC>
     e1a:	89 83       	std	Y+1, r24	; 0x01
     e1c:	d6 dc       	rcall	.-1620   	; 0x7ca <initDisplay>
     e1e:	89 83       	std	Y+1, r24	; 0x01
     e20:	83 e3       	ldi	r24, 0x33	; 51
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	ea dc       	rcall	.-1580   	; 0x7fa <usart1_init>
     e26:	8f e7       	ldi	r24, 0x7F	; 127
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0b dd       	rcall	.-1514   	; 0x842 <TimerCounter0setup>
     e2c:	8a e7       	ldi	r24, 0x7A	; 122
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	2a e7       	ldi	r18, 0x7A	; 122
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	f9 01       	movw	r30, r18
     e36:	20 81       	ld	r18, Z
     e38:	20 64       	ori	r18, 0x40	; 64
     e3a:	fc 01       	movw	r30, r24
     e3c:	20 83       	st	Z, r18
     e3e:	78 94       	sei
     e40:	89 81       	ldd	r24, Y+1	; 0x01
     e42:	8f 5f       	subi	r24, 0xFF	; 255
     e44:	89 83       	std	Y+1, r24	; 0x01
     e46:	8a e7       	ldi	r24, 0x7A	; 122
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	2a e7       	ldi	r18, 0x7A	; 122
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	f9 01       	movw	r30, r18
     e50:	20 81       	ld	r18, Z
     e52:	27 7f       	andi	r18, 0xF7	; 247
     e54:	fc 01       	movw	r30, r24
     e56:	20 83       	st	Z, r18
     e58:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
     e5c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
     e60:	9c 01       	movw	r18, r24
     e62:	ce 01       	movw	r24, r28
     e64:	05 96       	adiw	r24, 0x05	; 5
     e66:	49 e0       	ldi	r20, 0x09	; 9
     e68:	50 e0       	ldi	r21, 0x00	; 0
     e6a:	bc 01       	movw	r22, r24
     e6c:	c9 01       	movw	r24, r18
     e6e:	9f d1       	rcall	.+830    	; 0x11ae <itoa>
     e70:	87 e4       	ldi	r24, 0x47	; 71
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	20 91 38 01 	lds	r18, 0x0138	; 0x800138 <adc_value>
     e78:	30 91 39 01 	lds	r19, 0x0139	; 0x800139 <adc_value+0x1>
     e7c:	36 95       	lsr	r19
     e7e:	27 95       	ror	r18
     e80:	36 95       	lsr	r19
     e82:	27 95       	ror	r18
     e84:	fc 01       	movw	r30, r24
     e86:	20 83       	st	Z, r18
     e88:	8a e7       	ldi	r24, 0x7A	; 122
     e8a:	90 e0       	ldi	r25, 0x00	; 0
     e8c:	2a e7       	ldi	r18, 0x7A	; 122
     e8e:	30 e0       	ldi	r19, 0x00	; 0
     e90:	f9 01       	movw	r30, r18
     e92:	20 81       	ld	r18, Z
     e94:	28 60       	ori	r18, 0x08	; 8
     e96:	fc 01       	movw	r30, r24
     e98:	20 83       	st	Z, r18
     e9a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
     e9e:	88 23       	and	r24, r24
     ea0:	11 f1       	breq	.+68     	; 0xee6 <main+0x10a>
     ea2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     ea6:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     eaa:	81 30       	cpi	r24, 0x01	; 1
     eac:	91 05       	cpc	r25, r1
     eae:	59 f0       	breq	.+22     	; 0xec6 <main+0xea>
     eb0:	81 30       	cpi	r24, 0x01	; 1
     eb2:	91 05       	cpc	r25, r1
     eb4:	30 f0       	brcs	.+12     	; 0xec2 <main+0xe6>
     eb6:	82 30       	cpi	r24, 0x02	; 2
     eb8:	91 05       	cpc	r25, r1
     eba:	39 f0       	breq	.+14     	; 0xeca <main+0xee>
     ebc:	03 97       	sbiw	r24, 0x03	; 3
     ebe:	41 f0       	breq	.+16     	; 0xed0 <main+0xf4>
     ec0:	10 c0       	rjmp	.+32     	; 0xee2 <main+0x106>
     ec2:	b0 dd       	rcall	.-1184   	; 0xa24 <DbBOOThandler>
     ec4:	0e c0       	rjmp	.+28     	; 0xee2 <main+0x106>
     ec6:	d9 dd       	rcall	.-1102   	; 0xa7a <DbADChandler>
     ec8:	0c c0       	rjmp	.+24     	; 0xee2 <main+0x106>
     eca:	02 de       	rcall	.-1020   	; 0xad0 <DbUSARThandler>
     ecc:	1a 82       	std	Y+2, r1	; 0x02
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <main+0x106>
     ed0:	8b 81       	ldd	r24, Y+3	; 0x03
     ed2:	28 2f       	mov	r18, r24
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	ce 01       	movw	r24, r28
     ed8:	49 96       	adiw	r24, 0x19	; 25
     eda:	b9 01       	movw	r22, r18
     edc:	38 de       	rcall	.-912    	; 0xb4e <DbTEXThandler>
     ede:	8b 83       	std	Y+3, r24	; 0x03
     ee0:	00 00       	nop
     ee2:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <__data_end>
     ee6:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     eea:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     eee:	03 97       	sbiw	r24, 0x03	; 3
     ef0:	61 f4       	brne	.+24     	; 0xf0a <main+0x12e>
     ef2:	61 e0       	ldi	r22, 0x01	; 1
     ef4:	80 e0       	ldi	r24, 0x00	; 0
     ef6:	1d db       	rcall	.-2502   	; 0x532 <lcdGotoXY>
     ef8:	ce 01       	movw	r24, r28
     efa:	49 96       	adiw	r24, 0x19	; 25
     efc:	4f d1       	rcall	.+670    	; 0x119c <strlen>
     efe:	28 2f       	mov	r18, r24
     f00:	ce 01       	movw	r24, r28
     f02:	49 96       	adiw	r24, 0x19	; 25
     f04:	62 2f       	mov	r22, r18
     f06:	91 db       	rcall	.-2270   	; 0x62a <lcdPrintData>
     f08:	9b cf       	rjmp	.-202    	; 0xe40 <main+0x64>
     f0a:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <dbState>
     f0e:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <dbState+0x1>
     f12:	02 97       	sbiw	r24, 0x02	; 2
     f14:	09 f0       	breq	.+2      	; 0xf18 <main+0x13c>
     f16:	4a c0       	rjmp	.+148    	; 0xfac <main+0x1d0>
     f18:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <subState>
     f1c:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <subState+0x1>
     f20:	02 97       	sbiw	r24, 0x02	; 2
     f22:	09 f0       	breq	.+2      	; 0xf26 <main+0x14a>
     f24:	3b c0       	rjmp	.+118    	; 0xf9c <main+0x1c0>
     f26:	8a 81       	ldd	r24, Y+2	; 0x02
     f28:	8a 30       	cpi	r24, 0x0A	; 10
     f2a:	98 f5       	brcc	.+102    	; 0xf92 <main+0x1b6>
     f2c:	fb dc       	rcall	.-1546   	; 0x924 <usart1_receive>
     f2e:	8c 83       	std	Y+4, r24	; 0x04
     f30:	8c 81       	ldd	r24, Y+4	; 0x04
     f32:	8d 30       	cpi	r24, 0x0D	; 13
     f34:	19 f0       	breq	.+6      	; 0xf3c <main+0x160>
     f36:	8c 81       	ldd	r24, Y+4	; 0x04
     f38:	8a 30       	cpi	r24, 0x0A	; 10
     f3a:	29 f4       	brne	.+10     	; 0xf46 <main+0x16a>
     f3c:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <subState+0x1>
     f40:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <subState>
     f44:	51 c0       	rjmp	.+162    	; 0xfe8 <main+0x20c>
     f46:	8c 81       	ldd	r24, Y+4	; 0x04
     f48:	a5 dc       	rcall	.-1718   	; 0x894 <usart1_transmit>
     f4a:	8a 81       	ldd	r24, Y+2	; 0x02
     f4c:	88 2f       	mov	r24, r24
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	9e 01       	movw	r18, r28
     f52:	21 5f       	subi	r18, 0xF1	; 241
     f54:	3f 4f       	sbci	r19, 0xFF	; 255
     f56:	82 0f       	add	r24, r18
     f58:	93 1f       	adc	r25, r19
     f5a:	2c 81       	ldd	r18, Y+4	; 0x04
     f5c:	fc 01       	movw	r30, r24
     f5e:	20 83       	st	Z, r18
     f60:	8a 81       	ldd	r24, Y+2	; 0x02
     f62:	8f 5f       	subi	r24, 0xFF	; 255
     f64:	8a 83       	std	Y+2, r24	; 0x02
     f66:	8a 81       	ldd	r24, Y+2	; 0x02
     f68:	88 2f       	mov	r24, r24
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	9e 01       	movw	r18, r28
     f6e:	21 5f       	subi	r18, 0xF1	; 241
     f70:	3f 4f       	sbci	r19, 0xFF	; 255
     f72:	82 0f       	add	r24, r18
     f74:	93 1f       	adc	r25, r19
     f76:	fc 01       	movw	r30, r24
     f78:	10 82       	st	Z, r1
     f7a:	61 e0       	ldi	r22, 0x01	; 1
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	d9 da       	rcall	.-2638   	; 0x532 <lcdGotoXY>
     f80:	ce 01       	movw	r24, r28
     f82:	0f 96       	adiw	r24, 0x0f	; 15
     f84:	0b d1       	rcall	.+534    	; 0x119c <strlen>
     f86:	28 2f       	mov	r18, r24
     f88:	ce 01       	movw	r24, r28
     f8a:	0f 96       	adiw	r24, 0x0f	; 15
     f8c:	62 2f       	mov	r22, r18
     f8e:	4d db       	rcall	.-2406   	; 0x62a <lcdPrintData>
     f90:	57 cf       	rjmp	.-338    	; 0xe40 <main+0x64>
     f92:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <subState+0x1>
     f96:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <subState>
     f9a:	52 cf       	rjmp	.-348    	; 0xe40 <main+0x64>
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	88 e0       	ldi	r24, 0x08	; 8
     fa0:	c8 da       	rcall	.-2672   	; 0x532 <lcdGotoXY>
     fa2:	66 e0       	ldi	r22, 0x06	; 6
     fa4:	8b e2       	ldi	r24, 0x2B	; 43
     fa6:	91 e0       	ldi	r25, 0x01	; 1
     fa8:	40 db       	rcall	.-2432   	; 0x62a <lcdPrintData>
     faa:	4a cf       	rjmp	.-364    	; 0xe40 <main+0x64>
     fac:	61 e0       	ldi	r22, 0x01	; 1
     fae:	85 e0       	ldi	r24, 0x05	; 5
     fb0:	c0 da       	rcall	.-2688   	; 0x532 <lcdGotoXY>
     fb2:	66 e0       	ldi	r22, 0x06	; 6
     fb4:	8b e2       	ldi	r24, 0x2B	; 43
     fb6:	91 e0       	ldi	r25, 0x01	; 1
     fb8:	38 db       	rcall	.-2448   	; 0x62a <lcdPrintData>
     fba:	61 e0       	ldi	r22, 0x01	; 1
     fbc:	85 e0       	ldi	r24, 0x05	; 5
     fbe:	b9 da       	rcall	.-2702   	; 0x532 <lcdGotoXY>
     fc0:	ce 01       	movw	r24, r28
     fc2:	05 96       	adiw	r24, 0x05	; 5
     fc4:	eb d0       	rcall	.+470    	; 0x119c <strlen>
     fc6:	28 2f       	mov	r18, r24
     fc8:	ce 01       	movw	r24, r28
     fca:	05 96       	adiw	r24, 0x05	; 5
     fcc:	62 2f       	mov	r22, r18
     fce:	2d db       	rcall	.-2470   	; 0x62a <lcdPrintData>
     fd0:	ce 01       	movw	r24, r28
     fd2:	05 96       	adiw	r24, 0x05	; 5
     fd4:	e3 d0       	rcall	.+454    	; 0x119c <strlen>
     fd6:	28 2f       	mov	r18, r24
     fd8:	ce 01       	movw	r24, r28
     fda:	05 96       	adiw	r24, 0x05	; 5
     fdc:	62 2f       	mov	r22, r18
     fde:	75 dc       	rcall	.-1814   	; 0x8ca <usart1_sendstring>
     fe0:	8a e0       	ldi	r24, 0x0A	; 10
     fe2:	58 dc       	rcall	.-1872   	; 0x894 <usart1_transmit>
     fe4:	8d e0       	ldi	r24, 0x0D	; 13
     fe6:	56 dc       	rcall	.-1876   	; 0x894 <usart1_transmit>
     fe8:	2b cf       	rjmp	.-426    	; 0xe40 <main+0x64>

00000fea <__vector_7>:
     fea:	1f 92       	push	r1
     fec:	0f 92       	push	r0
     fee:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     ff2:	0f 92       	push	r0
     ff4:	11 24       	eor	r1, r1
     ff6:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
     ffa:	0f 92       	push	r0
     ffc:	8f 93       	push	r24
     ffe:	9f 93       	push	r25
    1000:	ef 93       	push	r30
    1002:	ff 93       	push	r31
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	cd b7       	in	r28, 0x3d	; 61
    100a:	de b7       	in	r29, 0x3e	; 62
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
    1012:	86 e2       	ldi	r24, 0x26	; 38
    1014:	90 e0       	ldi	r25, 0x00	; 0
    1016:	fc 01       	movw	r30, r24
    1018:	80 81       	ld	r24, Z
    101a:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <buttons>
    101e:	00 00       	nop
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	ff 91       	pop	r31
    1026:	ef 91       	pop	r30
    1028:	9f 91       	pop	r25
    102a:	8f 91       	pop	r24
    102c:	0f 90       	pop	r0
    102e:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    1032:	0f 90       	pop	r0
    1034:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1038:	0f 90       	pop	r0
    103a:	1f 90       	pop	r1
    103c:	18 95       	reti

0000103e <__vector_9>:
    103e:	1f 92       	push	r1
    1040:	0f 92       	push	r0
    1042:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1046:	0f 92       	push	r0
    1048:	11 24       	eor	r1, r1
    104a:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    104e:	0f 92       	push	r0
    1050:	2f 93       	push	r18
    1052:	3f 93       	push	r19
    1054:	4f 93       	push	r20
    1056:	5f 93       	push	r21
    1058:	6f 93       	push	r22
    105a:	7f 93       	push	r23
    105c:	8f 93       	push	r24
    105e:	9f 93       	push	r25
    1060:	af 93       	push	r26
    1062:	bf 93       	push	r27
    1064:	ef 93       	push	r30
    1066:	ff 93       	push	r31
    1068:	cf 93       	push	r28
    106a:	df 93       	push	r29
    106c:	cd b7       	in	r28, 0x3d	; 61
    106e:	de b7       	in	r29, 0x3e	; 62
    1070:	f8 94       	cli
    1072:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    1076:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    107a:	85 35       	cpi	r24, 0x55	; 85
    107c:	93 40       	sbci	r25, 0x03	; 3
    107e:	20 f0       	brcs	.+8      	; 0x1088 <__vector_9+0x4a>
    1080:	8f e1       	ldi	r24, 0x1F	; 31
    1082:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
    1086:	2e c0       	rjmp	.+92     	; 0x10e4 <__vector_9+0xa6>
    1088:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    108c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    1090:	8b 3a       	cpi	r24, 0xAB	; 171
    1092:	92 40       	sbci	r25, 0x02	; 2
    1094:	20 f0       	brcs	.+8      	; 0x109e <__vector_9+0x60>
    1096:	8f e0       	ldi	r24, 0x0F	; 15
    1098:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
    109c:	23 c0       	rjmp	.+70     	; 0x10e4 <__vector_9+0xa6>
    109e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    10a2:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    10a6:	81 15       	cp	r24, r1
    10a8:	92 40       	sbci	r25, 0x02	; 2
    10aa:	20 f0       	brcs	.+8      	; 0x10b4 <__vector_9+0x76>
    10ac:	87 e0       	ldi	r24, 0x07	; 7
    10ae:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
    10b2:	18 c0       	rjmp	.+48     	; 0x10e4 <__vector_9+0xa6>
    10b4:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    10b8:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    10bc:	86 35       	cpi	r24, 0x56	; 86
    10be:	91 40       	sbci	r25, 0x01	; 1
    10c0:	20 f0       	brcs	.+8      	; 0x10ca <__vector_9+0x8c>
    10c2:	83 e0       	ldi	r24, 0x03	; 3
    10c4:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
    10c8:	0d c0       	rjmp	.+26     	; 0x10e4 <__vector_9+0xa6>
    10ca:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    10ce:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    10d2:	8b 3a       	cpi	r24, 0xAB	; 171
    10d4:	91 05       	cpc	r25, r1
    10d6:	20 f0       	brcs	.+8      	; 0x10e0 <__vector_9+0xa2>
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <LEDpattern>
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <__vector_9+0xa6>
    10e0:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <LEDpattern>
    10e4:	78 94       	sei
    10e6:	06 de       	rcall	.-1012   	; 0xcf4 <flashLEDs>
    10e8:	00 00       	nop
    10ea:	df 91       	pop	r29
    10ec:	cf 91       	pop	r28
    10ee:	ff 91       	pop	r31
    10f0:	ef 91       	pop	r30
    10f2:	bf 91       	pop	r27
    10f4:	af 91       	pop	r26
    10f6:	9f 91       	pop	r25
    10f8:	8f 91       	pop	r24
    10fa:	7f 91       	pop	r23
    10fc:	6f 91       	pop	r22
    10fe:	5f 91       	pop	r21
    1100:	4f 91       	pop	r20
    1102:	3f 91       	pop	r19
    1104:	2f 91       	pop	r18
    1106:	0f 90       	pop	r0
    1108:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    110c:	0f 90       	pop	r0
    110e:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1112:	0f 90       	pop	r0
    1114:	1f 90       	pop	r1
    1116:	18 95       	reti

00001118 <__vector_25>:
    1118:	1f 92       	push	r1
    111a:	0f 92       	push	r0
    111c:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1120:	0f 92       	push	r0
    1122:	11 24       	eor	r1, r1
    1124:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    1128:	0f 92       	push	r0
    112a:	2f 93       	push	r18
    112c:	3f 93       	push	r19
    112e:	8f 93       	push	r24
    1130:	9f 93       	push	r25
    1132:	ef 93       	push	r30
    1134:	ff 93       	push	r31
    1136:	cf 93       	push	r28
    1138:	df 93       	push	r29
    113a:	cd b7       	in	r28, 0x3d	; 61
    113c:	de b7       	in	r29, 0x3e	; 62
    113e:	88 e7       	ldi	r24, 0x78	; 120
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	fc 01       	movw	r30, r24
    1144:	80 81       	ld	r24, Z
    1146:	88 2f       	mov	r24, r24
    1148:	90 e0       	ldi	r25, 0x00	; 0
    114a:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <adc_value+0x1>
    114e:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <adc_value>
    1152:	89 e7       	ldi	r24, 0x79	; 121
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	fc 01       	movw	r30, r24
    1158:	80 81       	ld	r24, Z
    115a:	88 2f       	mov	r24, r24
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	98 2f       	mov	r25, r24
    1160:	88 27       	eor	r24, r24
    1162:	9c 01       	movw	r18, r24
    1164:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <adc_value>
    1168:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <adc_value+0x1>
    116c:	82 0f       	add	r24, r18
    116e:	93 1f       	adc	r25, r19
    1170:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <adc_value+0x1>
    1174:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <adc_value>
    1178:	00 00       	nop
    117a:	df 91       	pop	r29
    117c:	cf 91       	pop	r28
    117e:	ff 91       	pop	r31
    1180:	ef 91       	pop	r30
    1182:	9f 91       	pop	r25
    1184:	8f 91       	pop	r24
    1186:	3f 91       	pop	r19
    1188:	2f 91       	pop	r18
    118a:	0f 90       	pop	r0
    118c:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
    1190:	0f 90       	pop	r0
    1192:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1196:	0f 90       	pop	r0
    1198:	1f 90       	pop	r1
    119a:	18 95       	reti

0000119c <strlen>:
    119c:	fc 01       	movw	r30, r24
    119e:	01 90       	ld	r0, Z+
    11a0:	00 20       	and	r0, r0
    11a2:	e9 f7       	brne	.-6      	; 0x119e <strlen+0x2>
    11a4:	80 95       	com	r24
    11a6:	90 95       	com	r25
    11a8:	8e 0f       	add	r24, r30
    11aa:	9f 1f       	adc	r25, r31
    11ac:	08 95       	ret

000011ae <itoa>:
    11ae:	45 32       	cpi	r20, 0x25	; 37
    11b0:	51 05       	cpc	r21, r1
    11b2:	18 f4       	brcc	.+6      	; 0x11ba <itoa+0xc>
    11b4:	42 30       	cpi	r20, 0x02	; 2
    11b6:	08 f0       	brcs	.+2      	; 0x11ba <itoa+0xc>
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <__itoa_ncheck>
    11ba:	fb 01       	movw	r30, r22
    11bc:	10 82       	st	Z, r1
    11be:	cb 01       	movw	r24, r22
    11c0:	08 95       	ret

000011c2 <__itoa_ncheck>:
    11c2:	bb 27       	eor	r27, r27
    11c4:	4a 30       	cpi	r20, 0x0A	; 10
    11c6:	31 f4       	brne	.+12     	; 0x11d4 <__itoa_ncheck+0x12>
    11c8:	99 23       	and	r25, r25
    11ca:	22 f4       	brpl	.+8      	; 0x11d4 <__itoa_ncheck+0x12>
    11cc:	bd e2       	ldi	r27, 0x2D	; 45
    11ce:	90 95       	com	r25
    11d0:	81 95       	neg	r24
    11d2:	9f 4f       	sbci	r25, 0xFF	; 255
    11d4:	01 c0       	rjmp	.+2      	; 0x11d8 <__utoa_common>

000011d6 <__utoa_ncheck>:
    11d6:	bb 27       	eor	r27, r27

000011d8 <__utoa_common>:
    11d8:	fb 01       	movw	r30, r22
    11da:	55 27       	eor	r21, r21
    11dc:	aa 27       	eor	r26, r26
    11de:	88 0f       	add	r24, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	aa 1f       	adc	r26, r26
    11e4:	a4 17       	cp	r26, r20
    11e6:	10 f0       	brcs	.+4      	; 0x11ec <__utoa_common+0x14>
    11e8:	a4 1b       	sub	r26, r20
    11ea:	83 95       	inc	r24
    11ec:	50 51       	subi	r21, 0x10	; 16
    11ee:	b9 f7       	brne	.-18     	; 0x11de <__utoa_common+0x6>
    11f0:	a0 5d       	subi	r26, 0xD0	; 208
    11f2:	aa 33       	cpi	r26, 0x3A	; 58
    11f4:	08 f0       	brcs	.+2      	; 0x11f8 <__utoa_common+0x20>
    11f6:	a9 5d       	subi	r26, 0xD9	; 217
    11f8:	a1 93       	st	Z+, r26
    11fa:	00 97       	sbiw	r24, 0x00	; 0
    11fc:	79 f7       	brne	.-34     	; 0x11dc <__utoa_common+0x4>
    11fe:	b1 11       	cpse	r27, r1
    1200:	b1 93       	st	Z+, r27
    1202:	11 92       	st	Z+, r1
    1204:	cb 01       	movw	r24, r22
    1206:	00 c0       	rjmp	.+0      	; 0x1208 <strrev>

00001208 <strrev>:
    1208:	dc 01       	movw	r26, r24
    120a:	fc 01       	movw	r30, r24
    120c:	67 2f       	mov	r22, r23
    120e:	71 91       	ld	r23, Z+
    1210:	77 23       	and	r23, r23
    1212:	e1 f7       	brne	.-8      	; 0x120c <strrev+0x4>
    1214:	32 97       	sbiw	r30, 0x02	; 2
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <strrev+0x18>
    1218:	7c 91       	ld	r23, X
    121a:	6d 93       	st	X+, r22
    121c:	70 83       	st	Z, r23
    121e:	62 91       	ld	r22, -Z
    1220:	ae 17       	cp	r26, r30
    1222:	bf 07       	cpc	r27, r31
    1224:	c8 f3       	brcs	.-14     	; 0x1218 <strrev+0x10>
    1226:	08 95       	ret

00001228 <_exit>:
    1228:	f8 94       	cli

0000122a <__stop_program>:
    122a:	ff cf       	rjmp	.-2      	; 0x122a <__stop_program>
